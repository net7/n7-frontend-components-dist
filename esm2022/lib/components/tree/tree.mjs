//---------------------------
// TREE.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../anchor-wrapper/anchor-wrapper";
export class TreeComponent {
    onClick(payload) {
        if (!this.emit)
            return;
        this.emit('click', payload);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: TreeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: TreeComponent, selector: "n7-tree", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"n7-tree\">\n  <!-- Start recursive rendering -->\n  <ng-container\n    *ngTemplateOutlet=\"recursiveTree; context:{$implicit: data.items}\"\n  ></ng-container>\n\n  <!-- Template for recursive children rendering -->\n  <ng-template #recursiveTree let-node>\n    <div\n      class=\"n7-tree__item {{ item.classes || '' }}\"\n      *ngFor=\"let item of node\"\n    >\n      <div class=\"n7-tree__item-contents\">\n        <!-- Render expand/collapse arrow -->\n        <span\n          *ngIf=\"item.toggle\"\n          class=\"n7-tree__item-toggle {{ item.toggle.icon }}\"\n          (click)=\"onClick(item.toggle.payload)\"\n        >\n        </span>\n        <!-- Render the node -->\n        <n7-anchor-wrapper\n          [classes]=\"'n7-tree__item-details'\"\n          [data]=\"item.anchor\"\n          (clicked)=\"onClick($event)\"\n        >\n          <span\n            *ngIf=\"item.icon\"\n            class=\"n7-tree__item-icon {{ item.icon }}\"\n          ></span>\n          <img\n            class=\"n7-tree__item-img\"\n            *ngIf=\"item.img\"\n            src=\"{{ item.img }}\"\n            alt=\"{{ item.text }}\"\n          />\n          <span class=\"n7-tree__item-text\">{{ item.text }}</span>\n          <span class=\"n7-tree__item-right-icon {{ item.iconright }}\"></span>\n        </n7-anchor-wrapper>\n      </div>\n      <!-- Check for more child nodes and render them -->\n      <div class=\"n7-tree__children-wrapper\" *ngIf=\"item.items\">\n        <ng-container\n          *ngTemplateOutlet=\"recursiveTree; context:{$implicit: item.items}\"\n        ></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.AnchorWrapperComponent, selector: "n7-anchor-wrapper", inputs: ["data", "classes"], outputs: ["clicked"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: TreeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-tree', template: "<div *ngIf=\"data\" class=\"n7-tree\">\n  <!-- Start recursive rendering -->\n  <ng-container\n    *ngTemplateOutlet=\"recursiveTree; context:{$implicit: data.items}\"\n  ></ng-container>\n\n  <!-- Template for recursive children rendering -->\n  <ng-template #recursiveTree let-node>\n    <div\n      class=\"n7-tree__item {{ item.classes || '' }}\"\n      *ngFor=\"let item of node\"\n    >\n      <div class=\"n7-tree__item-contents\">\n        <!-- Render expand/collapse arrow -->\n        <span\n          *ngIf=\"item.toggle\"\n          class=\"n7-tree__item-toggle {{ item.toggle.icon }}\"\n          (click)=\"onClick(item.toggle.payload)\"\n        >\n        </span>\n        <!-- Render the node -->\n        <n7-anchor-wrapper\n          [classes]=\"'n7-tree__item-details'\"\n          [data]=\"item.anchor\"\n          (clicked)=\"onClick($event)\"\n        >\n          <span\n            *ngIf=\"item.icon\"\n            class=\"n7-tree__item-icon {{ item.icon }}\"\n          ></span>\n          <img\n            class=\"n7-tree__item-img\"\n            *ngIf=\"item.img\"\n            src=\"{{ item.img }}\"\n            alt=\"{{ item.text }}\"\n          />\n          <span class=\"n7-tree__item-text\">{{ item.text }}</span>\n          <span class=\"n7-tree__item-right-icon {{ item.iconright }}\"></span>\n        </n7-anchor-wrapper>\n      </div>\n      <!-- Check for more child nodes and render them -->\n      <div class=\"n7-tree__children-wrapper\" *ngIf=\"item.items\">\n        <ng-container\n          *ngTemplateOutlet=\"recursiveTree; context:{$implicit: item.items}\"\n        ></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</div>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2R2LWNvbXBvbmVudHMtbGliL3NyYy9saWIvY29tcG9uZW50cy90cmVlL3RyZWUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvdHJlZS90cmVlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCO0FBQzdCLFVBQVU7QUFDViw2QkFBNkI7QUFFN0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUErRWpELE1BQU0sT0FBTyxhQUFhO0lBS3hCLE9BQU8sQ0FBQyxPQUFPO1FBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQUUsT0FBTztRQUV2QixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM5QixDQUFDOzhHQVRVLGFBQWE7a0dBQWIsYUFBYSx1RkNuRjFCLHVwREFpREE7OzJGRGtDYSxhQUFhO2tCQUp6QixTQUFTOytCQUNFLFNBQVM7OEJBSVYsSUFBSTtzQkFBWixLQUFLO2dCQUVHLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUUkVFLnRzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmNob3IgfSBmcm9tICcuLi8uLi9zaGFyZWQtaW50ZXJmYWNlcyc7XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciB0aGUgc2luZ2xlIFRyZWVDb21wb25lbnQncyBcIkl0ZW1cIlxuICpcbiAqIEBwcm9wZXJ0eSBpY29uIChvcHRpb25hbClcbiAqIEBwcm9wZXJ0eSBpbWcgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IGNsYXNzZXMgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IHRleHQgKHJlcXVpcmVkKVxuICogQHByb3BlcnR5IGFuY2hvciAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgX21ldGEgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IGl0ZW1zIChvcHRpb25hbClcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUcmVlSXRlbSB7XG4gIC8qKlxuICAgKiB0aGUgbm9kZSdzIHRvZ2dsZSBhcnJvdywgdG8gZXhwYW5kIGFuZFxuICAgKiBjb2xsYXBzZSBpdCdzIGNoaWxkIG5vZGVzLlxuICAgKi9cbiAgdG9nZ2xlPzoge1xuICAgIGljb246IHN0cmluZztcbiAgICBwYXlsb2FkPzogYW55O1xuICB9O1xuICAvKipcbiAgICogdGhlIGl0ZW0ncyBpY29uLCBvbmx5IHVzZWQgb24gbGVhZiBpdGVtc1xuICAgKi9cbiAgaWNvbj86IHN0cmluZztcbiAgLyoqXG4gICAqIHRoZSBpdGVtJ3MgcmlnaHQgaWNvbiwgb25seSB1c2VkIG9uIHRyZWUgaXRlbXNcbiAgICovXG4gIGljb25yaWdodD86IHN0cmluZztcbiAgLyoqXG4gICAqIHRoZSBpdGVtJ3MgaW1hZ2UsIG9ubHkgdXNlZCBvbiBsZWFmIGl0ZW1zXG4gICAqL1xuICBpbWc/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBhZGRpdGlvbmFsIGh0bWwgY2xhc3Nlc1xuICAgKi9cbiAgY2xhc3Nlcz86IGFueTtcbiAgLyoqXG4gICAqIHRoZSBpdGVtJ3MgcmVuZGVyZWQgdGV4dFxuICAgKi9cbiAgdGV4dDogc3RyaW5nO1xuICAvKipcbiAgICogYW5jaG9yIDxhPlxuICAgKi9cbiAgYW5jaG9yPzogQW5jaG9yO1xuICAvKipcbiAgICogYWRkaXRpb25hbCBpbmZvIHVzZWZ1bCBmb3IgdGhlIGNvbXBvbmVudCdzIGxvZ2ljXG4gICAqL1xuICBfbWV0YT86IGFueTtcbiAgLyoqXG4gICAqIGl0ZW0gcmVjdXJzaW9uXG4gICAqL1xuICBpdGVtcz86IFRyZWVJdGVtW107XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciBUcmVlQ29tcG9uZW50J3MgXCJkYXRhXCJcbiAqXG4gKiBAcHJvcGVydHkgaGVhZGVyIChyZXF1aXJlZClcbiAqIC0gaWNvbiAocmVxdWlyZWQpXG4gKiAtIHRleHQgKHJlcXVpcmVkKVxuICogLSBjb2xsYXBzZUljb24gKHJlcXVpcmVkKVxuICogLSBjbGFzc2VzIChvcHRpb25hbClcbiAqIC0gcGF5bG9hZCAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgaXRlbXMgKHJlcXVpcmVkKVxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRyZWVEYXRhIHtcbiAgLyoqXG4gICAqIHRyZWUgb2YgaXRlbXNcbiAgICovXG4gIGl0ZW1zOiBUcmVlSXRlbVtdO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduNy10cmVlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RyZWUuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFRyZWVDb21wb25lbnQge1xuICBASW5wdXQoKSBkYXRhOiBUcmVlRGF0YTtcblxuICBASW5wdXQoKSBlbWl0OiBhbnk7XG5cbiAgb25DbGljayhwYXlsb2FkKSB7XG4gICAgaWYgKCF0aGlzLmVtaXQpIHJldHVybjtcblxuICAgIHRoaXMuZW1pdCgnY2xpY2snLCBwYXlsb2FkKTtcbiAgfVxufVxuIiwiPGRpdiAqbmdJZj1cImRhdGFcIiBjbGFzcz1cIm43LXRyZWVcIj5cbiAgPCEtLSBTdGFydCByZWN1cnNpdmUgcmVuZGVyaW5nIC0tPlxuICA8bmctY29udGFpbmVyXG4gICAgKm5nVGVtcGxhdGVPdXRsZXQ9XCJyZWN1cnNpdmVUcmVlOyBjb250ZXh0OnskaW1wbGljaXQ6IGRhdGEuaXRlbXN9XCJcbiAgPjwvbmctY29udGFpbmVyPlxuXG4gIDwhLS0gVGVtcGxhdGUgZm9yIHJlY3Vyc2l2ZSBjaGlsZHJlbiByZW5kZXJpbmcgLS0+XG4gIDxuZy10ZW1wbGF0ZSAjcmVjdXJzaXZlVHJlZSBsZXQtbm9kZT5cbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cIm43LXRyZWVfX2l0ZW0ge3sgaXRlbS5jbGFzc2VzIHx8ICcnIH19XCJcbiAgICAgICpuZ0Zvcj1cImxldCBpdGVtIG9mIG5vZGVcIlxuICAgID5cbiAgICAgIDxkaXYgY2xhc3M9XCJuNy10cmVlX19pdGVtLWNvbnRlbnRzXCI+XG4gICAgICAgIDwhLS0gUmVuZGVyIGV4cGFuZC9jb2xsYXBzZSBhcnJvdyAtLT5cbiAgICAgICAgPHNwYW5cbiAgICAgICAgICAqbmdJZj1cIml0ZW0udG9nZ2xlXCJcbiAgICAgICAgICBjbGFzcz1cIm43LXRyZWVfX2l0ZW0tdG9nZ2xlIHt7IGl0ZW0udG9nZ2xlLmljb24gfX1cIlxuICAgICAgICAgIChjbGljayk9XCJvbkNsaWNrKGl0ZW0udG9nZ2xlLnBheWxvYWQpXCJcbiAgICAgICAgPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwhLS0gUmVuZGVyIHRoZSBub2RlIC0tPlxuICAgICAgICA8bjctYW5jaG9yLXdyYXBwZXJcbiAgICAgICAgICBbY2xhc3Nlc109XCInbjctdHJlZV9faXRlbS1kZXRhaWxzJ1wiXG4gICAgICAgICAgW2RhdGFdPVwiaXRlbS5hbmNob3JcIlxuICAgICAgICAgIChjbGlja2VkKT1cIm9uQ2xpY2soJGV2ZW50KVwiXG4gICAgICAgID5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgKm5nSWY9XCJpdGVtLmljb25cIlxuICAgICAgICAgICAgY2xhc3M9XCJuNy10cmVlX19pdGVtLWljb24ge3sgaXRlbS5pY29uIH19XCJcbiAgICAgICAgICA+PC9zcGFuPlxuICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgIGNsYXNzPVwibjctdHJlZV9faXRlbS1pbWdcIlxuICAgICAgICAgICAgKm5nSWY9XCJpdGVtLmltZ1wiXG4gICAgICAgICAgICBzcmM9XCJ7eyBpdGVtLmltZyB9fVwiXG4gICAgICAgICAgICBhbHQ9XCJ7eyBpdGVtLnRleHQgfX1cIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJuNy10cmVlX19pdGVtLXRleHRcIj57eyBpdGVtLnRleHQgfX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJuNy10cmVlX19pdGVtLXJpZ2h0LWljb24ge3sgaXRlbS5pY29ucmlnaHQgfX1cIj48L3NwYW4+XG4gICAgICAgIDwvbjctYW5jaG9yLXdyYXBwZXI+XG4gICAgICA8L2Rpdj5cbiAgICAgIDwhLS0gQ2hlY2sgZm9yIG1vcmUgY2hpbGQgbm9kZXMgYW5kIHJlbmRlciB0aGVtIC0tPlxuICAgICAgPGRpdiBjbGFzcz1cIm43LXRyZWVfX2NoaWxkcmVuLXdyYXBwZXJcIiAqbmdJZj1cIml0ZW0uaXRlbXNcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICpuZ1RlbXBsYXRlT3V0bGV0PVwicmVjdXJzaXZlVHJlZTsgY29udGV4dDp7JGltcGxpY2l0OiBpdGVtLml0ZW1zfVwiXG4gICAgICAgID48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L25nLXRlbXBsYXRlPlxuPC9kaXY+XG4iXX0=