//---------------------------
// FACET-YEAR-RANGE.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class FacetYearRangeComponent {
    onChange(payload, selected) {
        switch (payload) {
            case 'in-date':
                {
                    // find index of selected option
                    const opts = this.data.inDate.options;
                    this.data.inDate._meta = opts.find((o) => o.value === selected).value;
                    const sliceIndex = opts.findIndex((o) => o.value === selected);
                    // make new array of possible years
                    const newOptions = opts.slice(sliceIndex, opts.length);
                    // give new array to second <select>
                    this.data.outDate.options = newOptions;
                    // remove placeholder and enable second <select>
                    this.data.inDate.placeholder = '';
                    this.data.outDate.classes = '';
                    this.data.outDate.placeholder = 'choose';
                }
                break;
            case 'out-date':
                this.data.outDate._meta = selected;
                this.data.outDate.placeholder = '';
                // emit selected facet parameters
                this.emit('change', {
                    payload,
                    value: {
                        from: this.data.inDate._meta,
                        to: this.data.outDate._meta,
                    },
                });
                break;
            default:
                break;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: FacetYearRangeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: FacetYearRangeComponent, selector: "n7-facet-year-range", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"n7-facet-year-range\">\n  <!-- Select starting year -->\n  <div class=\"n7-facet-year-range__in\">\n    <label class=\"n7-facet-year-range__in-label\">\n      {{ data.inDate.text }}\n    </label>\n    <select\n      (change)=\"onChange(data.inDate.payload, $event.target.value)\"\n      class=\"n7-facet-year-range__in-select {{ data.inDate.classes || '' }}\"\n    >\n      <!-- Placeholder option -->\n      <option\n        *ngIf=\"data.inDate.placeholder.length > 0\"\n        value=\"{{ data.inDate.placeholder }}\"\n        disabled\n        selected\n      >\n        {{ data.inDate.placeholder }}\n      </option>\n      <option *ngFor=\"let opt of data.inDate.options\" value=\"{{ opt.value }}\">\n        {{ opt.value }}\n      </option>\n    </select>\n  </div>\n\n  <!-- Select final year -->\n  <div class=\"n7-facet-year-range__out\">\n    <label class=\"n7-facet-year-range__out-label\">\n      {{ data.outDate.text }}\n    </label>\n    <select\n      (change)=\"onChange(data.outDate.payload, $event.target.value)\"\n      class=\"n7-facet-year-range__out-select {{ data.outDate.classes || '' }}\"\n      formControlName=\"outDate\"\n    >\n      <!-- Placeholder option -->\n      <option\n        *ngIf=\"data.outDate.placeholder.length > 0\"\n        value=\"{{ data.outDate.placeholder }}\"\n        disabled\n        selected\n      >\n        {{ data.outDate.placeholder }}\n      </option>\n      <option *ngFor=\"let opt of data.outDate.options\" value=\"{{ opt.value }}\">\n        {{ opt.value }}\n      </option>\n    </select>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: FacetYearRangeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-facet-year-range', template: "<div *ngIf=\"data\" class=\"n7-facet-year-range\">\n  <!-- Select starting year -->\n  <div class=\"n7-facet-year-range__in\">\n    <label class=\"n7-facet-year-range__in-label\">\n      {{ data.inDate.text }}\n    </label>\n    <select\n      (change)=\"onChange(data.inDate.payload, $event.target.value)\"\n      class=\"n7-facet-year-range__in-select {{ data.inDate.classes || '' }}\"\n    >\n      <!-- Placeholder option -->\n      <option\n        *ngIf=\"data.inDate.placeholder.length > 0\"\n        value=\"{{ data.inDate.placeholder }}\"\n        disabled\n        selected\n      >\n        {{ data.inDate.placeholder }}\n      </option>\n      <option *ngFor=\"let opt of data.inDate.options\" value=\"{{ opt.value }}\">\n        {{ opt.value }}\n      </option>\n    </select>\n  </div>\n\n  <!-- Select final year -->\n  <div class=\"n7-facet-year-range__out\">\n    <label class=\"n7-facet-year-range__out-label\">\n      {{ data.outDate.text }}\n    </label>\n    <select\n      (change)=\"onChange(data.outDate.payload, $event.target.value)\"\n      class=\"n7-facet-year-range__out-select {{ data.outDate.classes || '' }}\"\n      formControlName=\"outDate\"\n    >\n      <!-- Placeholder option -->\n      <option\n        *ngIf=\"data.outDate.placeholder.length > 0\"\n        value=\"{{ data.outDate.placeholder }}\"\n        disabled\n        selected\n      >\n        {{ data.outDate.placeholder }}\n      </option>\n      <option *ngFor=\"let opt of data.outDate.options\" value=\"{{ opt.value }}\">\n        {{ opt.value }}\n      </option>\n    </select>\n  </div>\n</div>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,