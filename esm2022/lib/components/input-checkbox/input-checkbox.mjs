//---------------------------
// INPUT-CHECKBOX.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class InputCheckboxComponent {
    onChange(inputPayload, value) {
        if (!this.emit)
            return;
        this.emit('change', { inputPayload, value });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: InputCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: InputCheckboxComponent, selector: "n7-input-checkbox", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"n7-input-checkbox {{ data.classes || '' }}\">\n  <fieldset class=\"n7-input-checkbox__fieldset\">\n    <legend\n      class=\"n7-input-checkbox__legend\"\n      *ngIf=\"data.legend\"\n      [innerHTML]=\"data.legend\"\n    ></legend>\n    <ng-container *ngFor=\"let input of data.checkboxes\">\n      <div class=\"n7-input-checkbox__input-wrapper\">\n        <input\n          type=\"checkbox\"\n          id=\"{{ input.id }}\"\n          [attr.name]=\"input.name\"\n          class=\"n7-input-checkbox__input\"\n          [ngClass]=\"input.classes\"\n          [checked]=\"input.checked\"\n          [disabled]=\"input.disabled\"\n          (change)=\"onChange(input.payload, $event.target.checked)\"\n        />\n        <label\n          *ngIf=\"input.label\"\n          class=\"n7-input-checkbox__label\"\n          for=\"{{ input.id }}\"\n          >{{ input.label }}</label\n        >\n      </div>\n    </ng-container>\n  </fieldset>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: InputCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-input-checkbox', template: "<div *ngIf=\"data\" class=\"n7-input-checkbox {{ data.classes || '' }}\">\n  <fieldset class=\"n7-input-checkbox__fieldset\">\n    <legend\n      class=\"n7-input-checkbox__legend\"\n      *ngIf=\"data.legend\"\n      [innerHTML]=\"data.legend\"\n    ></legend>\n    <ng-container *ngFor=\"let input of data.checkboxes\">\n      <div class=\"n7-input-checkbox__input-wrapper\">\n        <input\n          type=\"checkbox\"\n          id=\"{{ input.id }}\"\n          [attr.name]=\"input.name\"\n          class=\"n7-input-checkbox__input\"\n          [ngClass]=\"input.classes\"\n          [checked]=\"input.checked\"\n          [disabled]=\"input.disabled\"\n          (change)=\"onChange(input.payload, $event.target.checked)\"\n        />\n        <label\n          *ngIf=\"input.label\"\n          class=\"n7-input-checkbox__label\"\n          for=\"{{ input.id }}\"\n          >{{ input.label }}</label\n        >\n      </div>\n    </ng-container>\n  </fieldset>\n</div>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtY2hlY2tib3guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtY2hlY2tib3gvaW5wdXQtY2hlY2tib3gudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtY2hlY2tib3gvaW5wdXQtY2hlY2tib3guaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0Isb0JBQW9CO0FBQ3BCLDZCQUE2QjtBQUU3QixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBdUVqRCxNQUFNLE9BQU8sc0JBQXNCO0lBS2pDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsS0FBTTtRQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFBRSxPQUFPO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs4R0FSVSxzQkFBc0I7a0dBQXRCLHNCQUFzQixpR0MzRW5DLG85QkE2QkE7OzJGRDhDYSxzQkFBc0I7a0JBSmxDLFNBQVM7K0JBQ0UsbUJBQW1COzhCQUlwQixJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIElOUFVULUNIRUNLQk9YLnRzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciBJbnB1dENoZWNrYm94XG4gKlxuICogQHByb3BlcnR5IGlkIChyZXF1aXJlZClcbiAqIEBwcm9wZXJ0eSBsYWJlbCAocmVxdWlyZWQpXG4gKiBAcHJvcGVydHkgY2hlY2tlZCAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgZGlzYWJsZWQgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IHBheWxvYWQgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IGNsYXNzZXMgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IF9tZXRhIChvcHRpb25hbClcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJbnB1dENoZWNrYm94IHtcbiAgLyoqXG4gICAqIFVuaXF1ZSBJRCBmb3IgdGhlIGNoZWNrYm94XG4gICAqL1xuICBpZDogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGNvbnRyb2wuXG4gICAqL1xuICBuYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogTGFiZWwgZm9yIHRoZSBjaGVja2JveFxuICAgKi9cbiAgbGFiZWw6IHN0cmluZztcbiAgLyoqXG4gICAqIERlZmF1bHRzIHRoZSBjaGVja2JveCB0byBiZSBjaGVja2VkXG4gICAqL1xuICBjaGVja2VkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFNldHMgdGhlIGRpc2FibGVkIEhUTUwgYXR0cmlidXRlXG4gICAqL1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBQYXlsb2FkIGZvciB0aGUgY2hhbmdlIGV2ZW50XG4gICAqL1xuICBwYXlsb2FkPzogYW55O1xuICAvKipcbiAgICogQWRkaXRpb25hbCBIVE1MIENsYXNzZXNcbiAgICovXG4gIGNsYXNzZXM/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBZGRpdGlvbmFsIGRhdGEgZm9yIHRoZSBjb21wb25lbnQncyBsb2dpY1xuICAgKi9cbiAgX21ldGE/OiBhbnk7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciBJbnB1dENoZWNrYm94RGF0YVxuICogQHByb3BlcnR5IGNoZWNrYm94ZXMgKHJlcXVpcmVkKVxuICovXG5leHBvcnQgaW50ZXJmYWNlIElucHV0Q2hlY2tib3hEYXRhIHtcbiAgLyoqXG4gICAqIEFuIGFycmF5IG9mIGlucHV0IGNoZWNrYm94ZXNcbiAgICovXG4gIGNoZWNrYm94ZXM6IElucHV0Q2hlY2tib3hbXTtcbiAgLyoqXG4gICAqIEZpZWxkc2V0IChncm91cCkgbGVnZW5kIGxhYmVsXG4gICAqL1xuICBsZWdlbmQ/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBZGRpdGlvbmFsIEhUTUwgQ2xhc3Nlc1xuICAgKi9cbiAgY2xhc3Nlcz86IHN0cmluZztcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbjctaW5wdXQtY2hlY2tib3gnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtY2hlY2tib3guaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIElucHV0Q2hlY2tib3hDb21wb25lbnQge1xuICBASW5wdXQoKSBkYXRhOiBJbnB1dENoZWNrYm94RGF0YTtcblxuICBASW5wdXQoKSBlbWl0OiBhbnk7XG5cbiAgb25DaGFuZ2UoaW5wdXRQYXlsb2FkLCB2YWx1ZT8pIHtcbiAgICBpZiAoIXRoaXMuZW1pdCkgcmV0dXJuO1xuICAgIHRoaXMuZW1pdCgnY2hhbmdlJywgeyBpbnB1dFBheWxvYWQsIHZhbHVlIH0pO1xuICB9XG59XG4iLCI8ZGl2ICpuZ0lmPVwiZGF0YVwiIGNsYXNzPVwibjctaW5wdXQtY2hlY2tib3gge3sgZGF0YS5jbGFzc2VzIHx8ICcnIH19XCI+XG4gIDxmaWVsZHNldCBjbGFzcz1cIm43LWlucHV0LWNoZWNrYm94X19maWVsZHNldFwiPlxuICAgIDxsZWdlbmRcbiAgICAgIGNsYXNzPVwibjctaW5wdXQtY2hlY2tib3hfX2xlZ2VuZFwiXG4gICAgICAqbmdJZj1cImRhdGEubGVnZW5kXCJcbiAgICAgIFtpbm5lckhUTUxdPVwiZGF0YS5sZWdlbmRcIlxuICAgID48L2xlZ2VuZD5cbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpbnB1dCBvZiBkYXRhLmNoZWNrYm94ZXNcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveF9faW5wdXQtd3JhcHBlclwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgIGlkPVwie3sgaW5wdXQuaWQgfX1cIlxuICAgICAgICAgIFthdHRyLm5hbWVdPVwiaW5wdXQubmFtZVwiXG4gICAgICAgICAgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveF9faW5wdXRcIlxuICAgICAgICAgIFtuZ0NsYXNzXT1cImlucHV0LmNsYXNzZXNcIlxuICAgICAgICAgIFtjaGVja2VkXT1cImlucHV0LmNoZWNrZWRcIlxuICAgICAgICAgIFtkaXNhYmxlZF09XCJpbnB1dC5kaXNhYmxlZFwiXG4gICAgICAgICAgKGNoYW5nZSk9XCJvbkNoYW5nZShpbnB1dC5wYXlsb2FkLCAkZXZlbnQudGFyZ2V0LmNoZWNrZWQpXCJcbiAgICAgICAgLz5cbiAgICAgICAgPGxhYmVsXG4gICAgICAgICAgKm5nSWY9XCJpbnB1dC5sYWJlbFwiXG4gICAgICAgICAgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveF9fbGFiZWxcIlxuICAgICAgICAgIGZvcj1cInt7IGlucHV0LmlkIH19XCJcbiAgICAgICAgICA+e3sgaW5wdXQubGFiZWwgfX08L2xhYmVsXG4gICAgICAgID5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2ZpZWxkc2V0PlxuPC9kaXY+XG4iXX0=