import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class InputTextareaComponent {
    onChange(inputPayload, value) {
        if (!this.emit)
            return;
        this.emit('change', { inputPayload, value });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: InputTextareaComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: InputTextareaComponent, selector: "n7-input-textarea", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data as input\" class=\"n7-input-textarea\">\n  <label\n    *ngIf=\"input.label\"\n    class=\"n7-input-textarea__label\"\n    for=\"{{ input.id }}\"\n    [innerHTML]=\"input.label\"\n  >\n  </label>\n  <div\n    class=\"n7-input-textarea__wrapper\"\n    [ngClass]=\"{\n            'has-icon': !!input.icon\n        }\"\n  >\n    <textarea\n      id=\"{{ input.id }}\"\n      class=\"n7-input-textarea__text\"\n      [ngClass]=\"input.classes\"\n      [attr.name]=\"input.name\"\n      [value]=\"input.value || null\"\n      [disabled]=\"input.disabled\"\n      [required]=\"input.required\"\n      [attr.placeholder]=\"input.placeholder\"\n      [attr.autocomplete]=\"input.autocomplete\"\n      [attr.autofocus]=\"input.autofocus\"\n      [attr.maxlength]=\"input.maxlength\"\n      [attr.minlength]=\"input.minlength\"\n      [attr.rows]=\"input.rows\"\n      [attr.cols]=\"input.cols\"\n      (input)=\"onChange(input.inputPayload, $event.target.value)\"\n      (keyup.enter)=\"onChange(input.enterPayload, $event.target.value)\"\n    >\n    </textarea>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: InputTextareaComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-input-textarea', template: "<div *ngIf=\"data as input\" class=\"n7-input-textarea\">\n  <label\n    *ngIf=\"input.label\"\n    class=\"n7-input-textarea__label\"\n    for=\"{{ input.id }}\"\n    [innerHTML]=\"input.label\"\n  >\n  </label>\n  <div\n    class=\"n7-input-textarea__wrapper\"\n    [ngClass]=\"{\n            'has-icon': !!input.icon\n        }\"\n  >\n    <textarea\n      id=\"{{ input.id }}\"\n      class=\"n7-input-textarea__text\"\n      [ngClass]=\"input.classes\"\n      [attr.name]=\"input.name\"\n      [value]=\"input.value || null\"\n      [disabled]=\"input.disabled\"\n      [required]=\"input.required\"\n      [attr.placeholder]=\"input.placeholder\"\n      [attr.autocomplete]=\"input.autocomplete\"\n      [attr.autofocus]=\"input.autofocus\"\n      [attr.maxlength]=\"input.maxlength\"\n      [attr.minlength]=\"input.minlength\"\n      [attr.rows]=\"input.rows\"\n      [attr.cols]=\"input.cols\"\n      (input)=\"onChange(input.inputPayload, $event.target.value)\"\n      (keyup.enter)=\"onChange(input.enterPayload, $event.target.value)\"\n    >\n    </textarea>\n  </div>\n</div>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGV4dGFyZWEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtdGV4dGFyZWEvaW5wdXQtdGV4dGFyZWEudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtdGV4dGFyZWEvaW5wdXQtdGV4dGFyZWEuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBa0VqRCxNQUFNLE9BQU8sc0JBQXNCO0lBS2pDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsS0FBTTtRQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFBRSxPQUFPO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs4R0FSVSxzQkFBc0I7a0dBQXRCLHNCQUFzQixpR0NsRW5DLG9rQ0FtQ0E7OzJGRCtCYSxzQkFBc0I7a0JBSmxDLFNBQVM7K0JBQ0UsbUJBQW1COzhCQUlwQixJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT25PZmYgfSBmcm9tICcuLi8uLi9zaGFyZWQtaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCB0eXBlIElucHV0VGV4dGFyZWFEYXRhID0ge1xuICAvKiogVW5pcXVlIElEIGZvciB0aGUgdGV4dCBpbnB1dCBlbGVtZW50ICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKiBBIGhpbnQgdG8gdGhlIHVzZXIgb2Ygd2hhdCBjYW4gYmUgZW50ZXJlZCBpbiB0aGUgY29udHJvbC4gKi9cbiAgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG4gIC8qKiBEZWZhdWx0IHZhbHVlIG9mIHRoZSB0ZXh0YXJlYSAqL1xuICB2YWx1ZT86IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gIC8qKiBMYWJlbCBmb3IgdGhlIHRleHRhcmVhICovXG4gIGxhYmVsPzogc3RyaW5nO1xuICAvKipcbiAgICogSW5kaWNhdGVzIHRoYXQgdGhlIHVzZXIgY2Fubm90IGludGVyYWN0IHdpdGggdGhlIGNvbnRyb2wuXG4gICAqIElmIHRoaXMgYXR0cmlidXRlIGlzIG5vdCBzcGVjaWZpZWQsIHRoZSBjb250cm9sIGluaGVyaXRzIGl0cyBzZXR0aW5nXG4gICAqIGZyb20gdGhlIGNvbnRhaW5pbmcgZWxlbWVudC5cbiAgICovXG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSB2YWx1ZSBvZiB0aGUgY29udHJvbCBjYW4gYmUgYXV0b21hdGljYWxseSBjb21wbGV0ZWQgYnkgdGhlIGJyb3dzZXIuICovXG4gIGF1dG9jb21wbGV0ZT86IE9uT2ZmO1xuICAvKipcbiAgICogTGV0cyB5b3Ugc3BlY2lmeSB0aGF0IGEgZm9ybSBjb250cm9sIHNob3VsZCBoYXZlIGlucHV0IGZvY3VzIHdoZW4gdGhlIHBhZ2UgbG9hZHMuXG4gICAqIE9ubHkgb25lIGZvcm0tYXNzb2NpYXRlZCBlbGVtZW50IGluIGEgZG9jdW1lbnQgY2FuIGhhdmUgdGhpcyBhdHRyaWJ1dGUgc3BlY2lmaWVkLlxuICAgKi9cbiAgYXV0b2ZvY3VzPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBtYXhpbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIChVVEYtMTYgY29kZSB1bml0cykgdGhhdCB0aGUgdXNlciBjYW4gZW50ZXIuXG4gICAqIElmIHRoaXMgdmFsdWUgaXNuJ3Qgc3BlY2lmaWVkLCB0aGUgdXNlciBjYW4gZW50ZXIgYW4gdW5saW1pdGVkIG51bWJlciBvZiBjaGFyYWN0ZXJzLlxuICAgKi9cbiAgbWF4bGVuZ3RoPzogbnVtYmVyO1xuICAvKipcbiAgICogVGhlIG1pbmltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgKFVURi0xNiBjb2RlIHVuaXRzKSByZXF1aXJlZCB0aGF0IHRoZSB1c2VyIHNob3VsZCBlbnRlci5cbiAgICovXG4gIG1pbmxlbmd0aD86IG51bWJlcjtcbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBjb250cm9sLiAqL1xuICBuYW1lPzogc3RyaW5nO1xuICAvKiogU3BlY2lmaWVzIHRoYXQgdGhlIHVzZXIgbXVzdCBmaWxsIGluIGEgdmFsdWUgYmVmb3JlIHN1Ym1pdHRpbmcgYSBmb3JtLiAqL1xuICByZXF1aXJlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBUaGUgbnVtYmVyIG9mIHZpc2libGUgdGV4dCBsaW5lcyBmb3IgdGhlIGNvbnRyb2wuXG4gICAqIElmIGl0IGlzIHNwZWNpZmllZCwgaXQgbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXIuXG4gICAqIEBkZWZhdWx0VmFsdWUgMlxuICAgKi9cbiAgcm93cz86IG51bWJlcjtcbiAgLyoqXG4gICAqIFRoZSB2aXNpYmxlIHdpZHRoIG9mIHRoZSB0ZXh0IGNvbnRyb2wsIGluIGF2ZXJhZ2UgY2hhcmFjdGVyIHdpZHRocy5cbiAgICogSWYgaXQgaXMgc3BlY2lmaWVkLCBpdCBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlci5cbiAgICogQGRlZmF1bHRWYWx1ZSAyMFxuICAgKi9cbiAgY29scz86IG51bWJlcjtcbiAgLyoqIFBheWxvYWQgdGhhdCBpcyBzZW50IHdoZW4gdGhlIHVzZXIgY2hhbmdlcyB0aGUgdmFsdWUgKi9cbiAgaW5wdXRQYXlsb2FkPzogYW55O1xuICAvKiogUGF5bG9hZCB0aGF0IGlzIHNlbnQgd2hlbiB0aGUgdXNlciBwcmVzc2VzIHRoZSBcIkVudGVyXCIga2V5ICovXG4gIGVudGVyUGF5bG9hZD86IGFueTtcbiAgLyoqIFBheWxvYWQgdGhhdCBpcyBzZW50IHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBpY29uICovXG4gIGljb25QYXlsb2FkPzogYW55O1xuICAvKiogQWRkaXRpb25hbCBIVE1MIENsYXNzZXMgKi9cbiAgY2xhc3Nlcz86IGFueTtcbiAgLyoqIEFkZGl0aW9uYWwgZGF0YSBmb3IgdGhlIGNvbXBvbmVudCdzIGxvZ2ljICovXG4gIF9tZXRhPzogYW55O1xufTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbjctaW5wdXQtdGV4dGFyZWEnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtdGV4dGFyZWEuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIElucHV0VGV4dGFyZWFDb21wb25lbnQge1xuICBASW5wdXQoKSBkYXRhOiBJbnB1dFRleHRhcmVhRGF0YTtcblxuICBASW5wdXQoKSBlbWl0OiAodHlwZTogc3RyaW5nLCBwYXlsb2FkPzogdW5rbm93bikgPT4gdm9pZDtcblxuICBvbkNoYW5nZShpbnB1dFBheWxvYWQsIHZhbHVlPykge1xuICAgIGlmICghdGhpcy5lbWl0KSByZXR1cm47XG4gICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB7IGlucHV0UGF5bG9hZCwgdmFsdWUgfSk7XG4gIH1cbn1cbiIsIjxkaXYgKm5nSWY9XCJkYXRhIGFzIGlucHV0XCIgY2xhc3M9XCJuNy1pbnB1dC10ZXh0YXJlYVwiPlxuICA8bGFiZWxcbiAgICAqbmdJZj1cImlucHV0LmxhYmVsXCJcbiAgICBjbGFzcz1cIm43LWlucHV0LXRleHRhcmVhX19sYWJlbFwiXG4gICAgZm9yPVwie3sgaW5wdXQuaWQgfX1cIlxuICAgIFtpbm5lckhUTUxdPVwiaW5wdXQubGFiZWxcIlxuICA+XG4gIDwvbGFiZWw+XG4gIDxkaXZcbiAgICBjbGFzcz1cIm43LWlucHV0LXRleHRhcmVhX193cmFwcGVyXCJcbiAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgICAgICAnaGFzLWljb24nOiAhIWlucHV0Lmljb25cbiAgICAgICAgfVwiXG4gID5cbiAgICA8dGV4dGFyZWFcbiAgICAgIGlkPVwie3sgaW5wdXQuaWQgfX1cIlxuICAgICAgY2xhc3M9XCJuNy1pbnB1dC10ZXh0YXJlYV9fdGV4dFwiXG4gICAgICBbbmdDbGFzc109XCJpbnB1dC5jbGFzc2VzXCJcbiAgICAgIFthdHRyLm5hbWVdPVwiaW5wdXQubmFtZVwiXG4gICAgICBbdmFsdWVdPVwiaW5wdXQudmFsdWUgfHwgbnVsbFwiXG4gICAgICBbZGlzYWJsZWRdPVwiaW5wdXQuZGlzYWJsZWRcIlxuICAgICAgW3JlcXVpcmVkXT1cImlucHV0LnJlcXVpcmVkXCJcbiAgICAgIFthdHRyLnBsYWNlaG9sZGVyXT1cImlucHV0LnBsYWNlaG9sZGVyXCJcbiAgICAgIFthdHRyLmF1dG9jb21wbGV0ZV09XCJpbnB1dC5hdXRvY29tcGxldGVcIlxuICAgICAgW2F0dHIuYXV0b2ZvY3VzXT1cImlucHV0LmF1dG9mb2N1c1wiXG4gICAgICBbYXR0ci5tYXhsZW5ndGhdPVwiaW5wdXQubWF4bGVuZ3RoXCJcbiAgICAgIFthdHRyLm1pbmxlbmd0aF09XCJpbnB1dC5taW5sZW5ndGhcIlxuICAgICAgW2F0dHIucm93c109XCJpbnB1dC5yb3dzXCJcbiAgICAgIFthdHRyLmNvbHNdPVwiaW5wdXQuY29sc1wiXG4gICAgICAoaW5wdXQpPVwib25DaGFuZ2UoaW5wdXQuaW5wdXRQYXlsb2FkLCAkZXZlbnQudGFyZ2V0LnZhbHVlKVwiXG4gICAgICAoa2V5dXAuZW50ZXIpPVwib25DaGFuZ2UoaW5wdXQuZW50ZXJQYXlsb2FkLCAkZXZlbnQudGFyZ2V0LnZhbHVlKVwiXG4gICAgPlxuICAgIDwvdGV4dGFyZWE+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=