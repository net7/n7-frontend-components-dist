//---------------------------
// ADVANCED-AUTOCOMPLETE.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../anchor-wrapper/anchor-wrapper";
export class AdvancedAutocompleteComponent {
    onClick(payload) {
        if (!this.emit)
            return;
        this.emit('click', payload);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AdvancedAutocompleteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: AdvancedAutocompleteComponent, selector: "n7-advanced-autocomplete", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div\n  *ngIf=\"data\"\n  class=\"n7-advanced-autocomplete\"\n  [ngClass]=\"{ 'is-empty' : (data.results && data.results.length === 0), 'is-loading': !data.results }\"\n>\n  <!-- If there are some results -->\n  <ng-container *ngIf=\"data.results && data.results.length > 0\">\n    <ng-container *ngTemplateOutlet=\"hasLoaded\"></ng-container>\n  </ng-container>\n  <!-- If no results are found -->\n  <ng-container *ngIf=\"data.results && data.results.length === 0\">\n    <ng-container *ngTemplateOutlet=\"isEmpty\"></ng-container>\n  </ng-container>\n  <!-- If is loading -->\n  <ng-container *ngIf=\"!data.results\">\n    <ng-container *ngTemplateOutlet=\"isLoading\"></ng-container>\n  </ng-container>\n</div>\n\n<!-- Template: Is empty -->\n<ng-template #isEmpty>\n  <div\n    class=\"n7-advanced-autocomplete__empty\"\n    [innerHTML]=\"data.fallback\"\n  ></div>\n  <!-- Render actions -->\n  <ng-container\n    *ngTemplateOutlet=\"actions; context:{$implicit: data.actions}\"\n  ></ng-container>\n</ng-template>\n\n<!-- Template: Is loading -->\n<ng-template #isLoading>\n  <!-- Layout appends loader-component here -->\n  <span\n    class=\"n7-advanced-autocomplete__loader\"\n    id=\"n7-advanced-autocomplete__loader\"\n  ></span>\n</ng-template>\n\n<!-- Template: Has loaded -->\n<ng-template #hasLoaded>\n  <!-- Search results -->\n  <div class=\"n7-advanced-autocomplete__results\">\n    <!-- Render groups -->\n    <ng-container *ngFor=\"let res of data.results\">\n      <div *ngIf=\"res.group\" class=\"n7-advanced-autocomplete__group\">\n        <div\n          class=\"n7-advanced-autocomplete__group-title-wrapper {{ res.group.classes || '' }}\"\n        >\n          <n7-anchor-wrapper\n            [data]=\"res.group.anchor\"\n            (clicked)=\"onClick($event)\"\n          >\n            <span\n              *ngIf=\"res.group.icon\"\n              class=\"n7-advanced-autocomplete__group-icon {{ res.group.icon }}\"\n            ></span>\n            <span class=\"n7-advanced-autocomplete__group-title\"\n              >{{res.group.title}}</span\n            >\n          </n7-anchor-wrapper>\n        </div>\n        <!-- Render items -->\n        <div class=\"n7-advanced-autocomplete__items\">\n          <ng-container\n            *ngTemplateOutlet=\"items; context:{$implicit: res.items}\"\n          ></ng-container>\n        </div>\n      </div>\n      <div *ngIf=\"!res.group\" class=\"n7-advanced-autocomplete__nogroup\">\n        <ng-container\n          *ngTemplateOutlet=\"items; context:{$implicit: res.items}\"\n        ></ng-container>\n      </div>\n    </ng-container>\n  </div>\n  <!-- Actions -->\n  <ng-container\n    *ngTemplateOutlet=\"actions; context:{$implicit: data.actions}\"\n  ></ng-container>\n</ng-template>\n\n<!-- Template: Items -->\n<ng-template #items let-items>\n  <n7-anchor-wrapper\n    *ngFor=\"let item of items\"\n    [data]=\"item.anchor\"\n    (clicked)=\"onClick($event)\"\n    [classes]=\"'n7-advanced-autocomplete__item'\"\n  >\n    <span\n      *ngIf=\"item.title\"\n      class=\"n7-advanced-autocomplete__item-title\"\n      [innerHTML]=\"item.title\"\n    ></span>\n    <ng-container *ngIf=\"item.metadata\">\n      <span\n        *ngFor=\"let meta of item.metadata\"\n        class=\"n7-advanced-autocomplete__item-metadata\"\n      >\n        <span\n          *ngIf=\"meta.key\"\n          class=\"n7-advanced-autocomplete__item-metadata-key\"\n          >{{ meta.key }}</span\n        >\n        <span\n          *ngIf=\"meta.value\"\n          class=\"n7-advanced-autocomplete__item-metadata-value\"\n          >{{ meta.value }}</span\n        >\n      </span>\n    </ng-container>\n  </n7-anchor-wrapper>\n</ng-template>\n\n<!-- Template: Actions -->\n<ng-template #actions let-actions>\n  <div *ngIf=\"actions\" class=\"n7-advanced-autocomplete__action-bar\">\n    <n7-anchor-wrapper\n      *ngIf=\"actions.advanced\"\n      [data]=\"actions.advanced.anchor\"\n      (clicked)=\"onClick($event)\"\n      [classes]=\"'n7-btn n7-advanced-autocomplete__advanced-search'\"\n    >\n      {{actions.advanced.text}}\n    </n7-anchor-wrapper>\n\n    <n7-anchor-wrapper\n      *ngIf=\"actions.showMore\"\n      [data]=\"actions.showMore.anchor\"\n      (clicked)=\"onClick($event)\"\n      [classes]=\"'n7-btn n7-btn-cta n7-advanced-autocomplete__show-more'\"\n    >\n      {{actions.showMore.text}}\n    </n7-anchor-wrapper>\n  </div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.AnchorWrapperComponent, selector: "n7-anchor-wrapper", inputs: ["data", "classes"], outputs: ["clicked"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: AdvancedAutocompleteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-advanced-autocomplete', template: "<div\n  *ngIf=\"data\"\n  class=\"n7-advanced-autocomplete\"\n  [ngClass]=\"{ 'is-empty' : (data.results && data.results.length === 0), 'is-loading': !data.results }\"\n>\n  <!-- If there are some results -->\n  <ng-container *ngIf=\"data.results && data.results.length > 0\">\n    <ng-container *ngTemplateOutlet=\"hasLoaded\"></ng-container>\n  </ng-container>\n  <!-- If no results are found -->\n  <ng-container *ngIf=\"data.results && data.results.length === 0\">\n    <ng-container *ngTemplateOutlet=\"isEmpty\"></ng-container>\n  </ng-container>\n  <!-- If is loading -->\n  <ng-container *ngIf=\"!data.results\">\n    <ng-container *ngTemplateOutlet=\"isLoading\"></ng-container>\n  </ng-container>\n</div>\n\n<!-- Template: Is empty -->\n<ng-template #isEmpty>\n  <div\n    class=\"n7-advanced-autocomplete__empty\"\n    [innerHTML]=\"data.fallback\"\n  ></div>\n  <!-- Render actions -->\n  <ng-container\n    *ngTemplateOutlet=\"actions; context:{$implicit: data.actions}\"\n  ></ng-container>\n</ng-template>\n\n<!-- Template: Is loading -->\n<ng-template #isLoading>\n  <!-- Layout appends loader-component here -->\n  <span\n    class=\"n7-advanced-autocomplete__loader\"\n    id=\"n7-advanced-autocomplete__loader\"\n  ></span>\n</ng-template>\n\n<!-- Template: Has loaded -->\n<ng-template #hasLoaded>\n  <!-- Search results -->\n  <div class=\"n7-advanced-autocomplete__results\">\n    <!-- Render groups -->\n    <ng-container *ngFor=\"let res of data.results\">\n      <div *ngIf=\"res.group\" class=\"n7-advanced-autocomplete__group\">\n        <div\n          class=\"n7-advanced-autocomplete__group-title-wrapper {{ res.group.classes || '' }}\"\n        >\n          <n7-anchor-wrapper\n            [data]=\"res.group.anchor\"\n            (clicked)=\"onClick($event)\"\n          >\n            <span\n              *ngIf=\"res.group.icon\"\n              class=\"n7-advanced-autocomplete__group-icon {{ res.group.icon }}\"\n            ></span>\n            <span class=\"n7-advanced-autocomplete__group-title\"\n              >{{res.group.title}}</span\n            >\n          </n7-anchor-wrapper>\n        </div>\n        <!-- Render items -->\n        <div class=\"n7-advanced-autocomplete__items\">\n          <ng-container\n            *ngTemplateOutlet=\"items; context:{$implicit: res.items}\"\n          ></ng-container>\n        </div>\n      </div>\n      <div *ngIf=\"!res.group\" class=\"n7-advanced-autocomplete__nogroup\">\n        <ng-container\n          *ngTemplateOutlet=\"items; context:{$implicit: res.items}\"\n        ></ng-container>\n      </div>\n    </ng-container>\n  </div>\n  <!-- Actions -->\n  <ng-container\n    *ngTemplateOutlet=\"actions; context:{$implicit: data.actions}\"\n  ></ng-container>\n</ng-template>\n\n<!-- Template: Items -->\n<ng-template #items let-items>\n  <n7-anchor-wrapper\n    *ngFor=\"let item of items\"\n    [data]=\"item.anchor\"\n    (clicked)=\"onClick($event)\"\n    [classes]=\"'n7-advanced-autocomplete__item'\"\n  >\n    <span\n      *ngIf=\"item.title\"\n      class=\"n7-advanced-autocomplete__item-title\"\n      [innerHTML]=\"item.title\"\n    ></span>\n    <ng-container *ngIf=\"item.metadata\">\n      <span\n        *ngFor=\"let meta of item.metadata\"\n        class=\"n7-advanced-autocomplete__item-metadata\"\n      >\n        <span\n          *ngIf=\"meta.key\"\n          class=\"n7-advanced-autocomplete__item-metadata-key\"\n          >{{ meta.key }}</span\n        >\n        <span\n          *ngIf=\"meta.value\"\n          class=\"n7-advanced-autocomplete__item-metadata-value\"\n          >{{ meta.value }}</span\n        >\n      </span>\n    </ng-container>\n  </n7-anchor-wrapper>\n</ng-template>\n\n<!-- Template: Actions -->\n<ng-template #actions let-actions>\n  <div *ngIf=\"actions\" class=\"n7-advanced-autocomplete__action-bar\">\n    <n7-anchor-wrapper\n      *ngIf=\"actions.advanced\"\n      [data]=\"actions.advanced.anchor\"\n      (clicked)=\"onClick($event)\"\n      [classes]=\"'n7-btn n7-advanced-autocomplete__advanced-search'\"\n    >\n      {{actions.advanced.text}}\n    </n7-anchor-wrapper>\n\n    <n7-anchor-wrapper\n      *ngIf=\"actions.showMore\"\n      [data]=\"actions.showMore.anchor\"\n      (clicked)=\"onClick($event)\"\n      [classes]=\"'n7-btn n7-btn-cta n7-advanced-autocomplete__show-more'\"\n    >\n      {{actions.showMore.text}}\n    </n7-anchor-wrapper>\n  </div>\n</ng-template>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,