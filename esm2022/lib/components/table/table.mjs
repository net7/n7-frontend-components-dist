//---------------------------
// TABLE.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TableComponent {
    onCellClick(cellPayload) {
        if (!this.emit)
            return;
        this.emit('cellclick', cellPayload);
    }
    onCellDblClick(cellPayload) {
        if (!this.emit)
            return;
        this.emit('celldblclick', cellPayload);
    }
    onInputTextChange(cellPayload, cellValue) {
        if (!this.emit)
            return;
        const textChangePayload = { tcPayload: cellPayload, val: cellValue };
        this.emit('inputtextchange', textChangePayload);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: TableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.2", type: TableComponent, selector: "n7-table", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<section class=\"n7-table {{data.classes || ''}}\" *ngIf=\"data\">\n  <table class=\"n7-table__table\">\n    <thead class=\"n7-table__table-header\" *ngIf=\"data.head\">\n      <tr\n        class=\"n7-table__table-header-row {{row.classes || ''}}\"\n        *ngFor=\"let row of data.head\"\n      >\n        <th\n          class=\"n7-table__table-header-cell {{cell.classes || ''}}\"\n          *ngFor=\"let cell of row.cells\"\n          (click)=\"onCellClick(cell.payload)\"\n          [innerHTML]=\"cell.content\"\n        ></th>\n      </tr>\n    </thead>\n\n    <tbody class=\"n7-table__table-body\" *ngIf=\"data.body\">\n      <tr\n        class=\"n7-table__table-body-row {{row.classes || ''}}\"\n        *ngFor=\"let row of data.body\"\n      >\n        <td\n          class=\"n7-table__table-body-cell {{cell.classes || ''}}\"\n          *ngFor=\"let cell of row.cells; let i = index\"\n          (click)=\"onCellClick(cell.payload)\"\n          (dblclick)=\"onCellDblClick(cell.payload)\"\n          [attr.aria-label]=\"data.head[0].cells[i].content\"\n        >\n          <span\n            class=\"n7-table__table-body-cell-innerhtml\"\n            *ngIf=\"!cell.type || cell.type=='html'\"\n            [innerHTML]=\"cell.content\"\n          ></span>\n          <input\n            class=\"n7-table__table-body-cell-inputtext\"\n            *ngIf=\"cell.type=='input:text'\"\n            type=\"text\"\n            placeholder=\"{{cell.content}}\"\n            id=\"{{cell._meta.inputId}}\"\n            (keyup.enter)=\"onInputTextChange(cell.payload, $event.target.value)\"\n          />\n        </td>\n      </tr>\n    </tbody>\n\n    <tfoot class=\"n7-table__table-footer\" *ngIf=\"data.foot\">\n      <tr\n        class=\"n7-table__table-footer-row {{row.classes || ''}}\"\n        *ngFor=\"let row of data.foot\"\n      >\n        <td\n          class=\"n7-table__table-footer-cell {{cell.classes || ''}}\"\n          *ngFor=\"let cell of row.cells\"\n          (click)=\"onCellClick(cell.payload)\"\n          [innerHTML]=\"cell.content\"\n        ></td>\n      </tr>\n    </tfoot>\n  </table>\n</section>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.2", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-table', template: "<section class=\"n7-table {{data.classes || ''}}\" *ngIf=\"data\">\n  <table class=\"n7-table__table\">\n    <thead class=\"n7-table__table-header\" *ngIf=\"data.head\">\n      <tr\n        class=\"n7-table__table-header-row {{row.classes || ''}}\"\n        *ngFor=\"let row of data.head\"\n      >\n        <th\n          class=\"n7-table__table-header-cell {{cell.classes || ''}}\"\n          *ngFor=\"let cell of row.cells\"\n          (click)=\"onCellClick(cell.payload)\"\n          [innerHTML]=\"cell.content\"\n        ></th>\n      </tr>\n    </thead>\n\n    <tbody class=\"n7-table__table-body\" *ngIf=\"data.body\">\n      <tr\n        class=\"n7-table__table-body-row {{row.classes || ''}}\"\n        *ngFor=\"let row of data.body\"\n      >\n        <td\n          class=\"n7-table__table-body-cell {{cell.classes || ''}}\"\n          *ngFor=\"let cell of row.cells; let i = index\"\n          (click)=\"onCellClick(cell.payload)\"\n          (dblclick)=\"onCellDblClick(cell.payload)\"\n          [attr.aria-label]=\"data.head[0].cells[i].content\"\n        >\n          <span\n            class=\"n7-table__table-body-cell-innerhtml\"\n            *ngIf=\"!cell.type || cell.type=='html'\"\n            [innerHTML]=\"cell.content\"\n          ></span>\n          <input\n            class=\"n7-table__table-body-cell-inputtext\"\n            *ngIf=\"cell.type=='input:text'\"\n            type=\"text\"\n            placeholder=\"{{cell.content}}\"\n            id=\"{{cell._meta.inputId}}\"\n            (keyup.enter)=\"onInputTextChange(cell.payload, $event.target.value)\"\n          />\n        </td>\n      </tr>\n    </tbody>\n\n    <tfoot class=\"n7-table__table-footer\" *ngIf=\"data.foot\">\n      <tr\n        class=\"n7-table__table-footer-row {{row.classes || ''}}\"\n        *ngFor=\"let row of data.foot\"\n      >\n        <td\n          class=\"n7-table__table-footer-cell {{cell.classes || ''}}\"\n          *ngFor=\"let cell of row.cells\"\n          (click)=\"onCellClick(cell.payload)\"\n          [innerHTML]=\"cell.content\"\n        ></td>\n      </tr>\n    </tfoot>\n  </table>\n</section>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvdGFibGUvdGFibGUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvdGFibGUvdGFibGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0IsV0FBVztBQUNYLDZCQUE2QjtBQUU3QixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBOEZqRCxNQUFNLE9BQU8sY0FBYztJQUt6QixXQUFXLENBQUMsV0FBVztRQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFBRSxPQUFPO1FBRXZCLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxjQUFjLENBQUMsV0FBVztRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFBRSxPQUFPO1FBRXZCLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsU0FBaUI7UUFDOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQUUsT0FBTztRQUV2QixNQUFNLGlCQUFpQixHQUFHLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLENBQUM7UUFFckUsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2xELENBQUM7OEdBdkJVLGNBQWM7a0dBQWQsY0FBYyx3RkNsRzNCLG1sRUE0REE7OzJGRHNDYSxjQUFjO2tCQUoxQixTQUFTOytCQUNFLFVBQVU7OEJBSVgsSUFBSTtzQkFBWixLQUFLO2dCQUVHLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUQUJMRS50c1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEludGVyZmFjZSBmb3Igcm93J3MgY2VsbHNcbiAqXG4gKiBAcHJvcGVydHkgY29udGVudCAocmVxdWlyZWQpXG4gKiBAcHJvcGVydHkgdHlwZSAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgY2xhc3NlcyAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgcGF5bG9hZCAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgX21ldGEgKG9wdGlvbmFsKVxuICovXG5leHBvcnQgaW50ZXJmYWNlIENlbGwge1xuICAvKlxuICAgKiBpbm5lciBodG1sIG9yIGhpbnQgZm9yIHRoZSBpbnB1dCB0ZXh0LCBkZXBlbmRpbmcgb24gXCJ0eXBlXCJcbiAgICovXG4gIGNvbnRlbnQ6IGFueTtcbiAgLyoqXG4gICAqIGNvbnRlbnQgdHlwZVxuICAgKi9cbiAgdHlwZT86ICdodG1sJyB8ICdpbnB1dDp0ZXh0JztcbiAgLyoqXG4gICAqIGFkZGl0aW9uYWwgaHRtbCBjbGFzc2VzXG4gICAqL1xuICBjbGFzc2VzPzogc3RyaW5nO1xuICAvKipcbiAgICogYWN0aW9uIGNsaWNrJ3MgcGF5bG9hZFxuICAgKi9cbiAgcGF5bG9hZD86IGFueTtcbiAgLyoqXG4gICAqIGFkZGl0aW9uYWwgaW5mb1xuICAgKi9cbiAgX21ldGE/OiBhbnk7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciB0YWJsZSdzIHJvd3MgKGhlYWQsIGJvZHkgb3IgZm9vdCByb3dzKVxuICpcbiAqIEBwcm9wZXJ0eSBjZWxscyAocmVxdWlyZWQpXG4gKiBAcHJvcGVydHkgY2xhc3NlcyAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgcGF5bG9hZCAob3B0aW9uYWwpXG4gKiBAcHJvcGVydHkgX21ldGEgKG9wdGlvbmFsKVxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJvdyB7XG4gIC8qXG4gICAqIHJvdydzIGNlbGxzXG4gICAqL1xuICBjZWxsczogQ2VsbFtdO1xuICAvKipcbiAgICogYWRkaXRpb25hbCBodG1sIGNsYXNzZXNcbiAgICovXG4gIGNsYXNzZXM/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBhZGRpdGlvbmFsIGluZm9cbiAgICovXG4gIF9tZXRhPzogYW55O1xufVxuXG4vKipcbiAqIEludGVyZmFjZSBmb3IgVGFibGVDb21wb25lbnQncyBcImRhdGFcIlxuICpcbiAqIEBwcm9wZXJ0eSBib2R5IChyZXF1aXJlZClcbiAqIEBwcm9wZXJ0eSBoZWFkIChvcHRpb25hbClcbiAqIEBwcm9wcnR5IGZvb3QgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IGNsYXNzZXMgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IHBheWxvYWQgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IF9tZXRhIChvcHRpb25hbClcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUYWJsZURhdGEge1xuICAvKipcbiAgICogdGFibGUncyBoZWFkXG4gICAqL1xuICBoZWFkPzogUm93W107XG4gIC8qKlxuICAgKiB0YWJsZSdzIGJvZHkgKHRoZSB0YWJsZSBpdHMgc2VsZilcbiAgICovXG4gIGJvZHk6IFJvd1tdO1xuICAvKipcbiAgICogdGFibGUncyBmb290XG4gICAqL1xuICBmb290PzogUm93W107XG4gIC8qKlxuICAgKiBhZGRpdGlvbmFsIGh0bWwgY2xhc3Nlc1xuICAgKi9cbiAgY2xhc3Nlcz86IHN0cmluZztcbiAgLyoqXG4gICAqIGFkZGl0aW9uYWwgaW5mb1xuICAgKi9cbiAgX21ldGE/OiBhbnk7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ243LXRhYmxlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYmxlLmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGRhdGE6IFRhYmxlRGF0YTtcblxuICBASW5wdXQoKSBlbWl0OiBhbnk7XG5cbiAgb25DZWxsQ2xpY2soY2VsbFBheWxvYWQpIHtcbiAgICBpZiAoIXRoaXMuZW1pdCkgcmV0dXJuO1xuXG4gICAgdGhpcy5lbWl0KCdjZWxsY2xpY2snLCBjZWxsUGF5bG9hZCk7XG4gIH1cblxuICBvbkNlbGxEYmxDbGljayhjZWxsUGF5bG9hZCkge1xuICAgIGlmICghdGhpcy5lbWl0KSByZXR1cm47XG5cbiAgICB0aGlzLmVtaXQoJ2NlbGxkYmxjbGljaycsIGNlbGxQYXlsb2FkKTtcbiAgfVxuXG4gIG9uSW5wdXRUZXh0Q2hhbmdlKGNlbGxQYXlsb2FkLCBjZWxsVmFsdWU6IHN0cmluZykge1xuICAgIGlmICghdGhpcy5lbWl0KSByZXR1cm47XG5cbiAgICBjb25zdCB0ZXh0Q2hhbmdlUGF5bG9hZCA9IHsgdGNQYXlsb2FkOiBjZWxsUGF5bG9hZCwgdmFsOiBjZWxsVmFsdWUgfTtcblxuICAgIHRoaXMuZW1pdCgnaW5wdXR0ZXh0Y2hhbmdlJywgdGV4dENoYW5nZVBheWxvYWQpO1xuICB9XG59XG4iLCI8c2VjdGlvbiBjbGFzcz1cIm43LXRhYmxlIHt7ZGF0YS5jbGFzc2VzIHx8ICcnfX1cIiAqbmdJZj1cImRhdGFcIj5cbiAgPHRhYmxlIGNsYXNzPVwibjctdGFibGVfX3RhYmxlXCI+XG4gICAgPHRoZWFkIGNsYXNzPVwibjctdGFibGVfX3RhYmxlLWhlYWRlclwiICpuZ0lmPVwiZGF0YS5oZWFkXCI+XG4gICAgICA8dHJcbiAgICAgICAgY2xhc3M9XCJuNy10YWJsZV9fdGFibGUtaGVhZGVyLXJvdyB7e3Jvdy5jbGFzc2VzIHx8ICcnfX1cIlxuICAgICAgICAqbmdGb3I9XCJsZXQgcm93IG9mIGRhdGEuaGVhZFwiXG4gICAgICA+XG4gICAgICAgIDx0aFxuICAgICAgICAgIGNsYXNzPVwibjctdGFibGVfX3RhYmxlLWhlYWRlci1jZWxsIHt7Y2VsbC5jbGFzc2VzIHx8ICcnfX1cIlxuICAgICAgICAgICpuZ0Zvcj1cImxldCBjZWxsIG9mIHJvdy5jZWxsc1wiXG4gICAgICAgICAgKGNsaWNrKT1cIm9uQ2VsbENsaWNrKGNlbGwucGF5bG9hZClcIlxuICAgICAgICAgIFtpbm5lckhUTUxdPVwiY2VsbC5jb250ZW50XCJcbiAgICAgICAgPjwvdGg+XG4gICAgICA8L3RyPlxuICAgIDwvdGhlYWQ+XG5cbiAgICA8dGJvZHkgY2xhc3M9XCJuNy10YWJsZV9fdGFibGUtYm9keVwiICpuZ0lmPVwiZGF0YS5ib2R5XCI+XG4gICAgICA8dHJcbiAgICAgICAgY2xhc3M9XCJuNy10YWJsZV9fdGFibGUtYm9keS1yb3cge3tyb3cuY2xhc3NlcyB8fCAnJ319XCJcbiAgICAgICAgKm5nRm9yPVwibGV0IHJvdyBvZiBkYXRhLmJvZHlcIlxuICAgICAgPlxuICAgICAgICA8dGRcbiAgICAgICAgICBjbGFzcz1cIm43LXRhYmxlX190YWJsZS1ib2R5LWNlbGwge3tjZWxsLmNsYXNzZXMgfHwgJyd9fVwiXG4gICAgICAgICAgKm5nRm9yPVwibGV0IGNlbGwgb2Ygcm93LmNlbGxzOyBsZXQgaSA9IGluZGV4XCJcbiAgICAgICAgICAoY2xpY2spPVwib25DZWxsQ2xpY2soY2VsbC5wYXlsb2FkKVwiXG4gICAgICAgICAgKGRibGNsaWNrKT1cIm9uQ2VsbERibENsaWNrKGNlbGwucGF5bG9hZClcIlxuICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiZGF0YS5oZWFkWzBdLmNlbGxzW2ldLmNvbnRlbnRcIlxuICAgICAgICA+XG4gICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIGNsYXNzPVwibjctdGFibGVfX3RhYmxlLWJvZHktY2VsbC1pbm5lcmh0bWxcIlxuICAgICAgICAgICAgKm5nSWY9XCIhY2VsbC50eXBlIHx8IGNlbGwudHlwZT09J2h0bWwnXCJcbiAgICAgICAgICAgIFtpbm5lckhUTUxdPVwiY2VsbC5jb250ZW50XCJcbiAgICAgICAgICA+PC9zcGFuPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgY2xhc3M9XCJuNy10YWJsZV9fdGFibGUtYm9keS1jZWxsLWlucHV0dGV4dFwiXG4gICAgICAgICAgICAqbmdJZj1cImNlbGwudHlwZT09J2lucHV0OnRleHQnXCJcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwie3tjZWxsLmNvbnRlbnR9fVwiXG4gICAgICAgICAgICBpZD1cInt7Y2VsbC5fbWV0YS5pbnB1dElkfX1cIlxuICAgICAgICAgICAgKGtleXVwLmVudGVyKT1cIm9uSW5wdXRUZXh0Q2hhbmdlKGNlbGwucGF5bG9hZCwgJGV2ZW50LnRhcmdldC52YWx1ZSlcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgIDwvdGJvZHk+XG5cbiAgICA8dGZvb3QgY2xhc3M9XCJuNy10YWJsZV9fdGFibGUtZm9vdGVyXCIgKm5nSWY9XCJkYXRhLmZvb3RcIj5cbiAgICAgIDx0clxuICAgICAgICBjbGFzcz1cIm43LXRhYmxlX190YWJsZS1mb290ZXItcm93IHt7cm93LmNsYXNzZXMgfHwgJyd9fVwiXG4gICAgICAgICpuZ0Zvcj1cImxldCByb3cgb2YgZGF0YS5mb290XCJcbiAgICAgID5cbiAgICAgICAgPHRkXG4gICAgICAgICAgY2xhc3M9XCJuNy10YWJsZV9fdGFibGUtZm9vdGVyLWNlbGwge3tjZWxsLmNsYXNzZXMgfHwgJyd9fVwiXG4gICAgICAgICAgKm5nRm9yPVwibGV0IGNlbGwgb2Ygcm93LmNlbGxzXCJcbiAgICAgICAgICAoY2xpY2spPVwib25DZWxsQ2xpY2soY2VsbC5wYXlsb2FkKVwiXG4gICAgICAgICAgW2lubmVySFRNTF09XCJjZWxsLmNvbnRlbnRcIlxuICAgICAgICA+PC90ZD5cbiAgICAgIDwvdHI+XG4gICAgPC90Zm9vdD5cbiAgPC90YWJsZT5cbjwvc2VjdGlvbj5cbiJdfQ==