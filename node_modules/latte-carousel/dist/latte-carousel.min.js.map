{"version":3,"sources":["webpack://latte/webpack/universalModuleDefinition","webpack://latte/webpack/bootstrap","webpack://latte/./src/ts/option/options.ts","webpack://latte/./src/ts/event/event-emitter.ts","webpack://latte/./src/ts/option/responsive-map.ts","webpack://latte/./src/ts/index.ts","webpack://latte/./src/ts/carousel.ts","webpack://latte/./src/ts/stage.ts","webpack://latte/./src/ts/tween.ts","webpack://latte/./src/ts/ui/autoplay.ts","webpack://latte/./src/ts/ui/buttons.ts","webpack://latte/./src/ts/ui/dots.ts","webpack://latte/./src/ts/ui/touch.ts"],"names":["root","factory","exports","module","define","amd","window","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","options","count","move","touch","buttons","dots","rewind","autoplay","animation","prop","responsive","ResponsiveMap","getBreakpointOptions","screenWidth","innerWidth","document","body","clientWidth","matchOption","matchBreakpoint","option","breakpoint","parseInt","Options","listeners","on","event","listener","bucket","push","trigger","data","off","EventEmitter","map","globalOptions","responsiveOptions","Carousel","elementOrSelector","carouselElement","querySelector","Error","originalHtml","innerHTML","createContainers","contentElement","children","stageElement","itemElements","stage","Stage","Touch","Buttons","Dots","Autoplay","onWindowResizeListener","onWindowResize","addEventListener","onStageMove","onStageMoved","update","onCarouselPrevious","onCarouselNext","onCarouselGoto","onCarouselUpdate","onCarouselRemove","remove","removeEventListener","currentOptions","moveTo","currentIndex","currentPosition","contentSize","getBoundingClientRect","width","itemSize","stageSize","length","style","delta","tween","index","lastIndex","last","Math","min","max","duration","Tween","translate","drag","lastPosition","dragEndAlign","movedLeft","indexByPosition","dragEndFree","ceil","abs","floor","current","element","x","y","end","source","getTranslate","id","animationId","tweenId","animate","progress","interpolate","setTranslate","start","Date","getTime","loop","relative","requestFrame","transform","match","exec","parseFloat","callback","requestAnimationFrame","setTimeout","dest","amount","easeOutCubic","b","intervalId","mouseOver","onMouseEnter","onMouseLeave","disableInterval","enableInterval","setInterval","onInterval","clearInterval","previousButton","createButton","nextButton","insertBefore","appendChild","onPreviousClick","onNextClick","className","clazz","createElement","createContainer","dotsContainer","createDots","updateActive","dotCount","html","querySelectorAll","onDotClick","dot","getAttribute","nextIndex","nextDot","setAttribute","target","firstX","firstY","previousX","previousY","deltaX","deltaY","distanceX","distanceY","dragMinDistance","dragFreeMinDelta","dragFreeMaxDelta","dragFreeBaseDelta","state","onTouchStart","passive","onTouchMove","onTouchEnd","touches","clientX","clientY","minimumDrag","horizontalDrag","cancelable","preventDefault","sign"],"mappings":"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","file":"latte-carousel.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"latte\"] = factory();\n\telse\n\t\troot[\"latte\"] = factory();\n})((typeof window !== \"undefined\" ? window : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { ResponsiveMap } from \"./responsive-map\";\r\n\r\n/**\r\n * Carousel options interface.\r\n *\r\n * @export\r\n * @interface IOptions\r\n */\r\nexport interface IOptions {\r\n    count?: number;\r\n    move?: number;\r\n    touch?: boolean;\r\n    mode?: \"align\" | \"free\";\r\n    buttons?: boolean;\r\n    dots?: boolean;\r\n    rewind?: boolean;\r\n    autoplay?: number;\r\n    animation?: number;\r\n    responsive?: ResponsiveMap;\r\n}\r\n\r\n/**\r\n * Carousel options.\r\n *\r\n * @export\r\n * @class Options\r\n * @implements {IOptions}\r\n */\r\nexport class Options implements IOptions {\r\n    public count?: number = 3;\r\n    public move?: number = 1;\r\n    public touch?: boolean = false;\r\n    public mode?: \"align\" | \"free\" = \"align\";\r\n    public buttons?: boolean = true;\r\n    public dots?: boolean = false;\r\n    public rewind?: boolean = true;\r\n    public autoplay?: number = 0;\r\n    public animation?: number = 500;\r\n\r\n    public responsive?: ResponsiveMap;\r\n\r\n    /**\r\n     * Creates an instance of Options.\r\n     * @param {IOptions} [options] Options to copy properties.\r\n     * @memberof Options\r\n     */\r\n    constructor(options?: IOptions) {\r\n        if (options == null) {\r\n            return;\r\n        }\r\n\r\n        for (const prop in options) {\r\n            if (options.hasOwnProperty(prop) && prop !== \"responsive\") {\r\n                (this as any)[prop] = (options as any)[prop];\r\n            }\r\n        }\r\n\r\n        // Copy responsive properties\r\n        if (options.responsive != null) {\r\n            this.responsive = new ResponsiveMap(options.responsive, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds options based on current breakpoint (screen width).\r\n     *\r\n     * @returns {Options} Carousel options.\r\n     * @memberof Options\r\n     */\r\n    public getBreakpointOptions(): IOptions {\r\n        if (this.responsive == null) {\r\n            return this;\r\n        }\r\n\r\n        // Get current screen width\r\n        const screenWidth = window.innerWidth || document.body.clientWidth;\r\n\r\n        // Find matched breakpoint option\r\n        let matchOption: IOptions = null;\r\n        let matchBreakpoint = 0;\r\n\r\n        for (const key in this.responsive) {\r\n            if (this.responsive.hasOwnProperty(key)) {\r\n                const option = this.responsive[key];\r\n                const breakpoint = parseInt(key, 10);\r\n\r\n                if (breakpoint >= matchBreakpoint && breakpoint <= screenWidth) {\r\n                    matchOption = option;\r\n                    matchBreakpoint = breakpoint;\r\n                }\r\n            }\r\n        }\r\n\r\n        return matchOption;\r\n    }\r\n}\r\n","import { IListenerMap } from \"./listener-map\";\r\n\r\n/**\r\n * Basic event emitter implementation.\r\n *\r\n * @export\r\n * @class EventEmitter\r\n */\r\nexport class EventEmitter {\r\n    private listeners: IListenerMap = {};\r\n\r\n    /**\r\n     * Adds a new event listener.\r\n     *\r\n     * @param {string} event Event type.\r\n     * @param {(data?: any) => void} listener Event listener.\r\n     * @memberof EventEmitter\r\n     */\r\n    public on(event: string, listener: (data?: any) => void) {\r\n        let bucket = this.listeners[event];\r\n\r\n        if (bucket == null) {\r\n            this.listeners[event] = bucket = [];\r\n        }\r\n\r\n        bucket.push(listener);\r\n    }\r\n\r\n    /**\r\n     * Triggers all listeners by event type.\r\n     *\r\n     * @param {string} event Event type.\r\n     * @param {*} [data] Event data.\r\n     * @memberof EventEmitter\r\n     */\r\n    public trigger(event: string, data?: any) {\r\n        const bucket = this.listeners[event];\r\n\r\n        if (bucket != null) {\r\n            for (const listener of bucket) {\r\n                listener(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears all listeners.\r\n     *\r\n     * @memberof EventEmitter\r\n     */\r\n    public off() {\r\n        this.listeners = {};\r\n    }\r\n}\r\n","import { IOptions, Options } from \"./options\";\r\n\r\n/**\r\n * Responsive options map.\r\n *\r\n * @export\r\n * @class ResponsiveMap\r\n */\r\nexport class ResponsiveMap {\r\n    [breakpoint: string]: IOptions;\r\n\r\n    /**\r\n     * Creates an instance of ResponsiveMap.\r\n     * @param {ResponsiveMap} [map] Map to copy properties.\r\n     * @param {IOptions} [globalOptions] Options to use as default.\r\n     * @memberof ResponsiveMap\r\n     */\r\n    constructor(map?: ResponsiveMap, globalOptions?: IOptions) {\r\n        if (map == null) {\r\n            return;\r\n        }\r\n\r\n        // Instantiate options keeping global properties.\r\n        for (const breakpoint in map) {\r\n            if (map.hasOwnProperty(breakpoint)) {\r\n                const responsiveOptions = new Options((map as any)[breakpoint]);\r\n\r\n                // Copy from global options\r\n                if (globalOptions != null) {\r\n                    for (const prop in globalOptions) {\r\n                        if (\r\n                            globalOptions.hasOwnProperty(prop) &&\r\n                            prop !== \"responsive\" &&\r\n                            (map as any)[breakpoint][prop] == null\r\n                        ) {\r\n                            (responsiveOptions as any)[prop] = (globalOptions as any)[prop];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                (this as any)[breakpoint] = responsiveOptions;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export { Carousel } from \"./carousel\";\r\nexport { Options, IOptions } from \"./option/options\";\r\nexport { ResponsiveMap } from \"./option/responsive-map\";\r\n","import { EventEmitter } from \"./event/event-emitter\";\r\nimport { IOptions, Options } from \"./option/options\";\r\nimport { Stage } from \"./stage\";\r\nimport { Autoplay } from \"./ui/autoplay\";\r\nimport { Buttons } from \"./ui/buttons\";\r\nimport { Dots } from \"./ui/dots\";\r\nimport { Touch } from \"./ui/touch\";\r\n\r\n// tslint:disable-next-line\r\nrequire(\"../scss/style.scss\");\r\n\r\n/**\r\n * Base carousel class.\r\n *\r\n * @export\r\n * @class Carousel\r\n * @extends {EventEmitter}\r\n */\r\nexport class Carousel extends EventEmitter {\r\n    private carouselElement: HTMLElement;\r\n    private contentElement: HTMLElement;\r\n    private stageElement: HTMLElement;\r\n    private itemElements: HTMLCollection;\r\n\r\n    private currentOptions: IOptions;\r\n    private options: Options;\r\n    private stage: Stage;\r\n    private touch: Touch;\r\n    private buttons: Buttons;\r\n    private dots: Dots;\r\n    private autoplay: Autoplay;\r\n\r\n    private originalHtml: string;\r\n\r\n    private onWindowResizeListener: (event: UIEvent) => void;\r\n\r\n    /**\r\n     * Creates an instance of Carousel.\r\n     * @param {(string | HTMLElement)} elementOrSelector Root carousel element or selector.\r\n     * @param {IOptions} [options] Carousel options.\r\n     * @memberof Carousel\r\n     */\r\n    constructor(elementOrSelector: string | HTMLElement, options?: IOptions) {\r\n        super();\r\n\r\n        if (typeof elementOrSelector === \"string\") {\r\n            this.carouselElement = document.querySelector(elementOrSelector);\r\n        } else {\r\n            this.carouselElement = elementOrSelector;\r\n        }\r\n\r\n        if (this.carouselElement == null) {\r\n            throw new Error(\"Missing root latte-carousel element.\");\r\n        }\r\n\r\n        if (this.carouselElement.querySelector(\".latte-content\") != null) {\r\n            throw new Error(\"Cannot create multiple instances using the same latte-carousel element.\");\r\n        }\r\n\r\n        this.originalHtml = this.carouselElement.innerHTML;\r\n\r\n        this.createContainers();\r\n\r\n        this.contentElement = this.carouselElement.children[0] as HTMLElement;\r\n        this.stageElement = this.contentElement.children[0] as HTMLElement;\r\n        this.itemElements = this.stageElement.children;\r\n\r\n        this.options = new Options(options);\r\n        this.stage = new Stage(this.contentElement, this.stageElement, this.itemElements, this.options);\r\n        this.touch = new Touch(this.contentElement, this.stage, this.options);\r\n        this.buttons = new Buttons(this.carouselElement, this.contentElement, this.stage, this.options);\r\n        this.dots = new Dots(this.carouselElement, this.stage, this.options);\r\n        this.autoplay = new Autoplay(this.carouselElement, this.stage, this.options);\r\n\r\n        this.onWindowResizeListener = this.onWindowResize.bind(this);\r\n\r\n        window.addEventListener(\"resize\", this.onWindowResizeListener);\r\n\r\n        this.stage.on(\"move\", this.onStageMove.bind(this));\r\n        this.stage.on(\"moved\", this.onStageMoved.bind(this));\r\n\r\n        this.update();\r\n\r\n        this.on(\"previous\", this.onCarouselPrevious.bind(this));\r\n        this.on(\"next\", this.onCarouselNext.bind(this));\r\n        this.on(\"goto\", this.onCarouselGoto.bind(this));\r\n        this.on(\"update\", this.onCarouselUpdate.bind(this));\r\n        this.on(\"remove\", this.onCarouselRemove.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Removes carousel.\r\n     *\r\n     * @memberof Carousel\r\n     */\r\n    public remove() {\r\n        this.autoplay.remove();\r\n\r\n        window.removeEventListener(\"resize\", this.onWindowResizeListener);\r\n\r\n        this.off();\r\n\r\n        this.carouselElement.innerHTML = this.originalHtml;\r\n    }\r\n\r\n    /**\r\n     * Creates content and stage containers.\r\n     *\r\n     * @private\r\n     * @memberof Carousel\r\n     */\r\n    private createContainers() {\r\n        this.carouselElement.innerHTML = `\r\n            <div class=\"latte-content\">\r\n                <div class=\"latte-stage\">\r\n                    ${this.carouselElement.innerHTML}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Updates carousel.\r\n     *\r\n     * @private\r\n     * @memberof Carousel\r\n     */\r\n    private update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        this.stage.update();\r\n\r\n        this.touch.update();\r\n\r\n        this.buttons.update();\r\n\r\n        this.dots.update();\r\n\r\n        this.autoplay.update();\r\n    }\r\n\r\n    /**\r\n     * Window resize listener.\r\n     *\r\n     * @private\r\n     * @param {UIEvent} event UI Event.\r\n     * @memberof Carousel\r\n     */\r\n    private onWindowResize(event: UIEvent) {\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Stage move listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onStageMove(data: any) {\r\n        this.dots.update();\r\n\r\n        this.trigger(\"move\", data);\r\n    }\r\n\r\n    /**\r\n     * Stage moved listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onStageMoved(data: any) {\r\n        this.dots.update();\r\n\r\n        this.trigger(\"moved\", data);\r\n    }\r\n\r\n    /**\r\n     * Carousel previous listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselPrevious(data: any) {\r\n        this.stage.move(-this.currentOptions.move);\r\n    }\r\n\r\n    /**\r\n     * Carousel next listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselNext(data: any) {\r\n        this.stage.move(this.currentOptions.move);\r\n    }\r\n\r\n    /**\r\n     * Carousel goto listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselGoto(data: any) {\r\n        this.stage.moveTo(data as number);\r\n    }\r\n\r\n    /**\r\n     * Carousel update listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselUpdate(data: any) {\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Carousel remove listener.\r\n     *\r\n     * @private\r\n     * @param {*} data Event data.\r\n     * @memberof Carousel\r\n     */\r\n    private onCarouselRemove(data: any) {\r\n        this.remove();\r\n    }\r\n}\r\n","import { EventEmitter } from \"./event/event-emitter\";\r\nimport { IOptions, Options } from \"./option/options\";\r\nimport { Tween } from \"./tween\";\r\n\r\n/**\r\n * Base carousel stage.\r\n *\r\n * @export\r\n * @class Stage\r\n * @extends {EventEmitter}\r\n */\r\nexport class Stage extends EventEmitter {\r\n    private currentOptions: IOptions;\r\n\r\n    private currentIndex: number = 0;\r\n    private currentPosition: number = 0;\r\n\r\n    private contentSize: number;\r\n    private stageSize: number;\r\n    private itemSize: number;\r\n\r\n    /**\r\n     * Creates an instance of Stage.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {HTMLElement} stageElement Stage element.\r\n     * @param {HTMLCollection} itemElements Items elements.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Stage\r\n     */\r\n    constructor(\r\n        private contentElement: HTMLElement,\r\n        private stageElement: HTMLElement,\r\n        private itemElements: HTMLCollection,\r\n        private options: Options,\r\n    ) {\r\n        super();\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates stage computing options and position.\r\n     *\r\n     * @memberof Stage\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        // Compute size\r\n        this.contentSize = this.contentElement.getBoundingClientRect().width;\r\n        this.itemSize = this.contentSize / this.currentOptions.count;\r\n        this.stageSize = this.itemSize * this.itemElements.length;\r\n\r\n        // Apply size\r\n        for (let i = 0; i < this.itemElements.length; i++) {\r\n            const itemElement = this.itemElements[i] as HTMLElement;\r\n\r\n            itemElement.style.width = this.itemSize + \"px\";\r\n        }\r\n\r\n        this.stageElement.style.width = this.stageSize + \"px\";\r\n\r\n        // Adjust position\r\n        this.move(0, false);\r\n    }\r\n\r\n    /**\r\n     * Moves stage to relative index.\r\n     *\r\n     * @param {number} delta Index delta.\r\n     * @param {boolean} [tween=true] Use tweening\r\n     * @memberof Stage\r\n     */\r\n    public move(delta: number, tween: boolean = true) {\r\n        this.moveTo(this.currentIndex + delta, tween);\r\n    }\r\n\r\n    /**\r\n     * Moves stage to absolute index.\r\n     *\r\n     * @param {number} index Index.\r\n     * @param {boolean} [tween=true] Use tweening\r\n     * @memberof Stage\r\n     */\r\n    public moveTo(index: number, tween: boolean = true) {\r\n        const firstIndex = 0;\r\n        const lastIndex = this.last();\r\n\r\n        // Rewind index\r\n        if (this.currentOptions.rewind) {\r\n            if (index === lastIndex + this.currentOptions.move) {\r\n                index = 0;\r\n            } else if (index >= lastIndex) {\r\n                index = lastIndex;\r\n            } else if (index === -this.currentOptions.move) {\r\n                index = lastIndex;\r\n            } else if (index <= 0) {\r\n                index = 0;\r\n            }\r\n        }\r\n\r\n        // Compute position by index\r\n        this.currentIndex = index;\r\n        this.currentIndex = Math.min(Math.max(firstIndex, this.currentIndex), lastIndex);\r\n        this.currentPosition = this.currentIndex * this.itemSize * -1;\r\n\r\n        const duration = tween ? this.currentOptions.animation : 0;\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, duration, () => {\r\n            this.trigger(\"moved\");\r\n        });\r\n\r\n        this.trigger(\"move\");\r\n    }\r\n\r\n    /**\r\n     * Drags stage to relative position.\r\n     *\r\n     * @param {number} delta Position delta.\r\n     * @memberof Stage\r\n     */\r\n    public drag(delta: number) {\r\n        const lastIndex = this.last();\r\n\r\n        const firstPosition = 0;\r\n        const lastPosition = lastIndex * this.itemSize * -1;\r\n\r\n        // Change position only\r\n        this.currentPosition += delta;\r\n        this.currentPosition = Math.min(Math.max(lastPosition, this.currentPosition), firstPosition);\r\n\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, 0);\r\n\r\n        this.trigger(\"move\");\r\n    }\r\n\r\n    /**\r\n     * Finishes carousel drag with align mode.\r\n     *\r\n     * @param {boolean} movedLeft If carousel moved to the left.\r\n     * @memberof Stage\r\n     */\r\n    public dragEndAlign(movedLeft: boolean) {\r\n        this.currentIndex = this.indexByPosition(movedLeft);\r\n\r\n        this.move(0);\r\n    }\r\n\r\n    /**\r\n     * Finishes carousel drag with free mode.\r\n     *\r\n     * @param {number} delta Position delta for tweening.\r\n     * @param {boolean} movedLeft If carousel moved to the left.\r\n     * @memberof Stage\r\n     */\r\n    public dragEndFree(delta: number, movedLeft: boolean) {\r\n        const lastIndex = this.last();\r\n\r\n        const firstPosition = 0;\r\n        const lastPosition = lastIndex * this.itemSize * -1;\r\n\r\n        // Change position only\r\n        this.currentPosition += delta;\r\n        this.currentPosition = Math.min(Math.max(lastPosition, this.currentPosition), firstPosition);\r\n\r\n        // Compute index\r\n        this.currentIndex = this.indexByPosition(movedLeft);\r\n\r\n        Tween.translate(this.stageElement, this.currentPosition, 0, this.currentOptions.animation, () => {\r\n            this.currentIndex = this.indexByPosition(movedLeft);\r\n\r\n            this.trigger(\"moved\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns index using position.\r\n     *\r\n     * @param {boolean} movedLeft If carousel moved to the left.\r\n     * @returns {number} Stage index.\r\n     * @memberof Stage\r\n     */\r\n    public indexByPosition(movedLeft: boolean): number {\r\n        if (movedLeft) {\r\n            return Math.ceil(Math.abs(this.currentPosition) / this.itemSize);\r\n        }\r\n\r\n        return Math.floor(Math.abs(this.currentPosition) / this.itemSize);\r\n    }\r\n\r\n    /**\r\n     * Returns carousel item count.\r\n     *\r\n     * @returns {number} Item count.\r\n     * @memberof Stage\r\n     */\r\n    public count(): number {\r\n        return this.itemElements.length;\r\n    }\r\n\r\n    /**\r\n     * Returns current index.\r\n     *\r\n     * @returns {number} Current index.\r\n     * @memberof Stage\r\n     */\r\n    public current(): number {\r\n        return this.currentIndex;\r\n    }\r\n\r\n    /**\r\n     * Returns last index.\r\n     *\r\n     * @returns {number} Last index.\r\n     * @memberof Stage\r\n     */\r\n    public last(): number {\r\n        return Math.max(0, this.itemElements.length - this.currentOptions.count);\r\n    }\r\n}\r\n","export interface ITweenElement extends HTMLElement {\r\n    tweenId: number;\r\n}\r\n\r\n/**\r\n * Basic tweening implementation.\r\n *\r\n * @export\r\n * @class Tween\r\n */\r\nexport class Tween {\r\n    /**\r\n     * Translates the element to position.\r\n     *\r\n     * @static\r\n     * @param {HTMLElement} element Element to translate.\r\n     * @param {number} x X position.\r\n     * @param {number} y Y position.\r\n     * @param {number} duration Duration in millis.\r\n     * @param {() => void} [end] Animation end callback.\r\n     * @memberof Tween\r\n     */\r\n    public static translate(element: HTMLElement, x: number, y: number, duration: number, end?: () => void) {\r\n        const source = this.getTranslate(element);\r\n        const id = this.animationId++;\r\n\r\n        (element as ITweenElement).tweenId = id;\r\n\r\n        const update = (progress: number) => {\r\n            if ((element as ITweenElement).tweenId !== id) {\r\n                return false;\r\n            }\r\n\r\n            const value = {\r\n                x: this.interpolate(source.x, x, progress),\r\n                y: this.interpolate(source.y, y, progress),\r\n            };\r\n\r\n            this.setTranslate(element, value);\r\n\r\n            return true;\r\n        };\r\n\r\n        this.animate(duration, update, end);\r\n    }\r\n\r\n    /**\r\n     * Unique animation ID.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @type {number}\r\n     * @memberof Tween\r\n     */\r\n    private static animationId: number = 1;\r\n\r\n    /**\r\n     * Animates using callback loop.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} duration Duration in millis.\r\n     * @param {(progress: number) => boolean} update Animation callback. Must return true for animation to continue.\r\n     * @param {() => void} [end] Animation end callback.\r\n     * @memberof Tween\r\n     */\r\n    private static animate(duration: number, update: (progress: number) => boolean, end?: () => void) {\r\n        if (duration === 0) {\r\n            update(1);\r\n\r\n            if (end != null) {\r\n                end();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const start = new Date().getTime();\r\n\r\n        const loop = () => {\r\n            const now = new Date().getTime();\r\n            const relative = (now - start) / duration;\r\n            const progress = Math.min(relative, 1);\r\n\r\n            const shouldContinue = update(progress);\r\n\r\n            if (shouldContinue) {\r\n                if (progress < 1) {\r\n                    this.requestFrame(loop);\r\n                } else if (end != null) {\r\n                    end();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.requestFrame(loop);\r\n    }\r\n\r\n    /**\r\n     * Gets current translate value.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {HTMLElement} element Element to get value.\r\n     * @returns {{ x: number, y: number }} Translate value.\r\n     * @memberof Tween\r\n     */\r\n    private static getTranslate(element: HTMLElement): { x: number; y: number } {\r\n        const source = { x: 0, y: 0 };\r\n\r\n        const regex = /translate\\(([0-9.-]+)px,\\s?([0-9.-]+)px\\)/;\r\n        const value =\r\n            (element.style as any)[\"-ms-transform\"] ||\r\n            (element.style as any)[\"-webkit-transform\"] ||\r\n            (element.style as any)[\"-moz-transform\"] ||\r\n            (element.style as any)[\"-o-transform\"] ||\r\n            element.style.transform;\r\n\r\n        if (value != null) {\r\n            const match = regex.exec(value);\r\n\r\n            if (match != null) {\r\n                source.x = parseFloat(match[1]);\r\n                source.y = parseFloat(match[2]);\r\n            }\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Sets translate value.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {HTMLElement} element Element to set value.\r\n     * @param {{ x: number, y: number }} value Translate value.\r\n     * @memberof Tween\r\n     */\r\n    private static setTranslate(element: HTMLElement, value: { x: number; y: number }) {\r\n        const transform = `translate(${Math.ceil(value.x)}px, ${Math.ceil(value.y)}px)`;\r\n\r\n        (element.style as any)[\"-ms-transform\"] = transform;\r\n        (element.style as any)[\"-webkit-transform\"] = transform;\r\n        (element.style as any)[\"-moz-transform\"] = transform;\r\n        (element.style as any)[\"-o-transform\"] = transform;\r\n        element.style.transform = transform;\r\n    }\r\n\r\n    /**\r\n     * Request animation frame helper.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {() => void} callback Animation frame callback.\r\n     * @memberof Tween\r\n     */\r\n    private static requestFrame(callback: () => void) {\r\n        if (requestAnimationFrame != null) {\r\n            requestAnimationFrame(callback);\r\n        } else {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interpolates two numbers.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} source Source value.\r\n     * @param {number} dest Destination value.\r\n     * @param {number} amount Percentage.\r\n     * @returns {number} Interpolated value.\r\n     * @memberof Tween\r\n     */\r\n    private static interpolate(source: number, dest: number, amount: number): number {\r\n        return this.easeOutCubic(amount, source, dest - source, 1);\r\n    }\r\n\r\n    /**\r\n     * Cubic easing out function.\r\n     * Inspired from: http://robertpenner.com/easing/penner_easing_as1.txt\r\n     *\r\n     * @private\r\n     * @static\r\n     * @param {number} t Time.\r\n     * @param {number} b Base value.\r\n     * @param {number} c Change in value.\r\n     * @param {number} d Duration.\r\n     * @returns {number} Interpolated value.\r\n     * @memberof Tween\r\n     */\r\n    private static easeOutCubic(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n}\r\n","import { IOptions, Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel autoplay.\r\n *\r\n * @export\r\n * @class Autoplay\r\n */\r\nexport class Autoplay {\r\n    private currentOptions: IOptions;\r\n\r\n    private intervalId: number = 0;\r\n    private mouseOver: boolean = false;\r\n\r\n    /**\r\n     * Creates an instance of Autoplay.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Autoplay\r\n     */\r\n    constructor(private carouselElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.carouselElement.addEventListener(\"mouseenter\", this.onMouseEnter.bind(this));\r\n        this.carouselElement.addEventListener(\"mouseleave\", this.onMouseLeave.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel autoplay.\r\n     *\r\n     * @memberof Autoplay\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        this.disableInterval();\r\n\r\n        this.enableInterval();\r\n    }\r\n\r\n    /**\r\n     * Removes autoplay.\r\n     *\r\n     * @memberof Autoplay\r\n     */\r\n    public remove() {\r\n        this.disableInterval();\r\n    }\r\n\r\n    /**\r\n     * Enables interval.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private enableInterval() {\r\n        if (this.currentOptions.autoplay > 0 && this.intervalId === 0) {\r\n            this.intervalId = window.setInterval(this.onInterval.bind(this), this.currentOptions.autoplay);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disables interval.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private disableInterval() {\r\n        if (this.intervalId > 0) {\r\n            window.clearInterval(this.intervalId);\r\n\r\n            this.intervalId = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Interval listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onInterval() {\r\n        if (!this.mouseOver) {\r\n            this.stage.move(this.currentOptions.move);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse enter listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onMouseEnter() {\r\n        this.mouseOver = true;\r\n\r\n        this.disableInterval();\r\n    }\r\n\r\n    /**\r\n     * Mouse leave listener.\r\n     *\r\n     * @private\r\n     * @memberof Autoplay\r\n     */\r\n    private onMouseLeave() {\r\n        this.mouseOver = false;\r\n\r\n        this.enableInterval();\r\n    }\r\n}\r\n","import { IOptions, Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel buttons.\r\n *\r\n * @export\r\n * @class Buttons\r\n */\r\nexport class Buttons {\r\n    private currentOptions: IOptions;\r\n\r\n    private previousButton: HTMLElement;\r\n    private nextButton: HTMLElement;\r\n\r\n    /**\r\n     * Creates an instance of Buttons.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Buttons\r\n     */\r\n    constructor(\r\n        private carouselElement: HTMLElement,\r\n        private contentElement: HTMLElement,\r\n        private stage: Stage,\r\n        private options: Options,\r\n    ) {\r\n        this.previousButton = this.createButton(\"latte-previous\");\r\n        this.nextButton = this.createButton(\"latte-next\");\r\n\r\n        this.carouselElement.insertBefore(this.previousButton, this.contentElement);\r\n        this.carouselElement.appendChild(this.nextButton);\r\n\r\n        this.previousButton.addEventListener(\"click\", this.onPreviousClick.bind(this));\r\n        this.nextButton.addEventListener(\"click\", this.onNextClick.bind(this));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel buttons.\r\n     *\r\n     * @memberof Buttons\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        if (this.currentOptions.buttons === true) {\r\n            this.previousButton.className = \"latte-previous\";\r\n            this.nextButton.className = \"latte-next\";\r\n        } else {\r\n            this.previousButton.className = \"latte-previous invisible\";\r\n            this.nextButton.className = \"latte-next invisible\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new button.\r\n     *\r\n     * @private\r\n     * @param {string} clazz Element class.\r\n     * @returns {HTMLElement} Element created.\r\n     * @memberof Buttons\r\n     */\r\n    private createButton(clazz: string): HTMLElement {\r\n        const element = document.createElement(\"div\");\r\n        element.className = clazz;\r\n\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Previous click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Buttons\r\n     */\r\n    private onPreviousClick(event: MouseEvent) {\r\n        this.stage.move(-this.currentOptions.move);\r\n    }\r\n\r\n    /**\r\n     * Next click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Buttons\r\n     */\r\n    private onNextClick(event: MouseEvent) {\r\n        this.stage.move(this.currentOptions.move);\r\n    }\r\n}\r\n","import { IOptions, Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Carousel navigation dots.\r\n *\r\n * @export\r\n * @class Dots\r\n */\r\nexport class Dots {\r\n    private currentOptions: IOptions;\r\n\r\n    private dotsContainer: HTMLElement;\r\n    private dots: NodeListOf<HTMLElement>;\r\n\r\n    /**\r\n     * Creates an instance of Dots.\r\n     * @param {HTMLElement} carouselElement Carousel element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Dots\r\n     */\r\n    constructor(private carouselElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.createContainer();\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates carousel dots.\r\n     *\r\n     * @memberof Dots\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n\r\n        if (this.currentOptions.dots === true) {\r\n            this.dotsContainer.className = \"latte-dots\";\r\n\r\n            this.createDots();\r\n\r\n            this.updateActive();\r\n        } else {\r\n            this.dotsContainer.className = \"latte-dots invisible\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the dots container.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private createContainer() {\r\n        this.dotsContainer = document.createElement(\"div\");\r\n        this.dotsContainer.className = \"latte-dots\";\r\n\r\n        this.carouselElement.appendChild(this.dotsContainer);\r\n    }\r\n\r\n    /**\r\n     * Creates the dots itself.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private createDots() {\r\n        const count = this.dotCount();\r\n\r\n        // Avoid recreation\r\n        if (this.dots != null && this.dots.length === count) {\r\n            return;\r\n        }\r\n\r\n        // Build elements\r\n        let html = \"\";\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            let index = i * Math.ceil(this.currentOptions.count);\r\n            index = Math.min(index, this.stage.last());\r\n\r\n            html += `<div class=\"latte-dot\" data-index=${index}></div>`;\r\n        }\r\n\r\n        this.dotsContainer.innerHTML = html;\r\n\r\n        this.dots = this.dotsContainer.querySelectorAll(\".latte-dot\");\r\n\r\n        // Add events\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            const dot = this.dots[i];\r\n\r\n            dot.addEventListener(\"click\", this.onDotClick.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the active navigation dot.\r\n     *\r\n     * @private\r\n     * @memberof Dots\r\n     */\r\n    private updateActive() {\r\n        for (let i = 0; i < this.dots.length; i++) {\r\n            // Index bounds\r\n            const dot = this.dots[i];\r\n            const index = parseFloat(dot.getAttribute(\"data-index\"));\r\n\r\n            let nextIndex;\r\n            if (i + 1 < this.dots.length) {\r\n                const nextDot = this.dots[i + 1];\r\n                nextIndex = parseFloat(nextDot.getAttribute(\"data-index\"));\r\n            }\r\n\r\n            // Active class\r\n            const active = this.stage.current() >= index && (nextIndex == null || this.stage.current() < nextIndex);\r\n\r\n            const clazz = \"latte-dot\" + (active ? \" active\" : \"\");\r\n\r\n            dot.setAttribute(\"class\", clazz);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns navigation dot count.\r\n     *\r\n     * @private\r\n     * @returns {number} Dot count.\r\n     * @memberof Dots\r\n     */\r\n    private dotCount(): number {\r\n        return Math.ceil(this.stage.count() / Math.ceil(this.currentOptions.count));\r\n    }\r\n\r\n    /**\r\n     * Dot click listener.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event Mouse event.\r\n     * @memberof Dots\r\n     */\r\n    private onDotClick(event: MouseEvent) {\r\n        const dot = event.target as HTMLElement;\r\n        const index = parseFloat(dot.getAttribute(\"data-index\"));\r\n\r\n        this.stage.moveTo(index);\r\n\r\n        this.updateActive();\r\n    }\r\n}\r\n","import { IOptions, Options } from \"../option/options\";\r\nimport { Stage } from \"../stage\";\r\n\r\n/**\r\n * Touch support.\r\n *\r\n * @export\r\n * @class Touch\r\n */\r\nexport class Touch {\r\n    private currentOptions: IOptions;\r\n\r\n    // Positions\r\n    private firstX: number = 0;\r\n    private firstY: number = 0;\r\n    private previousX: number = 0;\r\n    private previousY: number = 0;\r\n\r\n    // Speed\r\n    private deltaX: number = 0;\r\n    private deltaY: number = 0;\r\n\r\n    // Distance\r\n    private distanceX: number = 0;\r\n    private distanceY: number = 0;\r\n    private dragMinDistance: number = 20;\r\n\r\n    // Free mode\r\n    private dragFreeMinDelta: number = 3;\r\n    private dragFreeMaxDelta: number = 40;\r\n    private dragFreeBaseDelta: number = 600;\r\n\r\n    private state: \"free\" | \"drag\" | \"lock\" = \"free\";\r\n\r\n    /**\r\n     * Creates an instance of Touch.\r\n     * @param {HTMLElement} contentElement Content element.\r\n     * @param {Stage} stage Carousel stage.\r\n     * @param {Options} options Carousel options.\r\n     * @memberof Touch\r\n     */\r\n    constructor(private contentElement: HTMLElement, private stage: Stage, private options: Options) {\r\n        this.contentElement.addEventListener(\"touchstart\", this.onTouchStart.bind(this), { passive: true });\r\n        this.contentElement.addEventListener(\"touchmove\", this.onTouchMove.bind(this));\r\n        this.contentElement.addEventListener(\"touchend\", this.onTouchEnd.bind(this), { passive: true });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Updates touch support.\r\n     *\r\n     * @memberof Touch\r\n     */\r\n    public update() {\r\n        this.currentOptions = this.options.getBreakpointOptions();\r\n    }\r\n\r\n    /**\r\n     * Touch start listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchStart(event: TouchEvent) {\r\n        const touch = event.touches[0];\r\n\r\n        this.firstX = this.previousX = touch.clientX;\r\n        this.firstY = this.previousY = touch.clientY;\r\n\r\n        this.distanceX = this.distanceY = 0;\r\n    }\r\n\r\n    /**\r\n     * Touch move listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchMove(event: TouchEvent) {\r\n        const touch = event.touches[0];\r\n\r\n        this.deltaX = touch.clientX - this.previousX;\r\n        this.deltaY = touch.clientY - this.previousY;\r\n\r\n        this.distanceX += Math.abs(this.deltaX);\r\n        this.distanceY += Math.abs(this.deltaY);\r\n\r\n        if (this.currentOptions.touch) {\r\n            const minimumDrag = this.distanceX >= this.dragMinDistance || this.distanceY >= this.dragMinDistance;\r\n            const horizontalDrag = this.distanceX >= this.distanceY;\r\n\r\n            // Check for minimum distance and horizontal drag\r\n            if (this.state === \"free\" && minimumDrag) {\r\n                if (horizontalDrag) {\r\n                    this.state = \"drag\";\r\n                } else {\r\n                    this.state = \"lock\";\r\n                }\r\n            }\r\n\r\n            // Lock scroll on touch move\r\n            if (this.state === \"drag\") {\r\n                if (event.cancelable) {\r\n                    event.preventDefault();\r\n                }\r\n\r\n                this.stage.drag(this.deltaX);\r\n            }\r\n        }\r\n\r\n        this.previousX = touch.clientX;\r\n        this.previousY = touch.clientY;\r\n    }\r\n\r\n    /**\r\n     * Touch end listener.\r\n     *\r\n     * @private\r\n     * @param {TouchEvent} event Touch event.\r\n     * @memberof Touch\r\n     */\r\n    private onTouchEnd(event: TouchEvent) {\r\n        // Prevent disabling touch while dragging\r\n        if (this.currentOptions.touch || this.state === \"drag\") {\r\n            this.state = \"free\";\r\n\r\n            const movedLeft = this.firstX > this.previousX;\r\n\r\n            if (this.currentOptions.mode === \"align\") {\r\n                this.stage.dragEndAlign(movedLeft);\r\n            } else if (this.currentOptions.mode === \"free\") {\r\n                const clamp = Math.min(Math.max(Math.abs(this.deltaX), this.dragFreeMinDelta), this.dragFreeMaxDelta);\r\n                const relative = (clamp - this.dragFreeMinDelta) / (this.dragFreeMaxDelta - this.dragFreeMinDelta);\r\n\r\n                const shouldAnimate = relative > 0;\r\n\r\n                if (shouldAnimate) {\r\n                    const delta = relative * this.dragFreeBaseDelta * Math.sign(this.deltaX);\r\n\r\n                    this.stage.dragEndFree(delta, movedLeft);\r\n                } else {\r\n                    this.stage.dragEndFree(0, movedLeft);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}