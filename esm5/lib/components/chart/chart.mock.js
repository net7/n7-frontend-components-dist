var ɵ0 = [
    [new Date('2019-08-01').getTime(), 770.17],
    [new Date('2019-08-02').getTime(), 645.03],
    [new Date('2019-08-03').getTime(), 709.32],
    [new Date('2019-08-04').getTime(), 708.11],
    [new Date('2019-08-05').getTime(), 706.59],
    [new Date('2019-08-06').getTime(), 607.28],
    [new Date('2019-08-07').getTime(), 494.59],
    [new Date('2019-08-08').getTime(), 636.81],
    [new Date('2019-08-09').getTime(), 709.04],
    [new Date('2019-08-10').getTime(), 717.31],
    [new Date('2019-08-11').getTime(), 805.61],
    [new Date('2019-08-12').getTime(), 758.60],
    [new Date('2019-08-13').getTime(), 612.82],
    [new Date('2019-08-14').getTime(), 608.90],
    [new Date('2019-08-15').getTime(), 734.68],
    [new Date('2019-08-16').getTime(), 838.54],
    [new Date('2019-08-17').getTime(), 692.88]
], ɵ1 = [
    [new Date('2019-08-01').getTime(), 927.04],
    [new Date('2019-08-02').getTime(), 944.66],
    [new Date('2019-08-03').getTime(), 860.84],
    [new Date('2019-08-04').getTime(), 867.28],
    [new Date('2019-08-05').getTime(), 947.55],
    [new Date('2019-08-06').getTime(), 798.94],
    [new Date('2019-08-07').getTime(), 757.66],
    [new Date('2019-08-08').getTime(), 729.57],
    [new Date('2019-08-09').getTime(), 679.58],
    [new Date('2019-08-10').getTime(), 618.78],
    [new Date('2019-08-11').getTime(), 805.61],
    [new Date('2019-08-12').getTime(), 791.18],
    [new Date('2019-08-13').getTime(), 913.78],
    [new Date('2019-08-14').getTime(), 608.90],
    [new Date('2019-08-15').getTime(), 611.88],
    [new Date('2019-08-16').getTime(), 744.02],
    [new Date('2019-08-17').getTime(), 600.46]
];
export var CHART_MOCK = {
    containerId: 'test-Chart',
    libOptions: {
        chart: {
            height: 550,
            width: 1500,
            type: 'area',
            toolbar: { show: true }
        },
        dataLabels: { enabled: false },
        colors: ['rgba(163,55,119, 1)', 'rgba(146,93,255, 1)'],
        fill: {
            colors: ['#a33777', '#925DFF'],
            gradient: { opacityFrom: 0.5, opacityTo: 0.1 }
        },
        stroke: { curve: 'straight', width: [2, 1] },
        series: [
            {
                name: 'Reddish value',
                data: ɵ0
            },
            {
                name: 'Purple value',
                data: ɵ1
            }
        ],
        grid: {
            borderColor: '#e7e7e7',
            strokeDashArray: 3,
            xaxis: { lines: { show: true } }
        },
        markers: { size: 3, hover: { size: 6 } },
        xaxis: {
            axisBorder: { show: true, color: '#f4f6fc' },
            labels: {},
            type: 'datetime',
            tickAmount: 6
        },
        yaxis: [
            {
                show: true,
                showAlways: false,
                opposite: false,
                reversed: false,
                logarithmic: false,
                forceNiceScale: false,
                floating: false,
                labels: {
                    show: true,
                    minWidth: 0,
                    maxWidth: 160,
                    offsetX: 0,
                    offsetY: 0,
                    rotate: 0,
                    padding: 20,
                    style: { fontSize: '11px', cssClass: '' }
                },
                axisBorder: {
                    show: true, color: '#f4f6fc', offsetX: 0, offsetY: 0
                },
                axisTicks: {
                    show: false, color: '#78909C', width: 6, offsetX: 0, offsetY: 0
                },
                title: {
                    text: 'P Totale °C', rotate: 90, offsetY: 0, offsetX: 0, style: { fontSize: '11px', cssClass: '' }
                },
                tooltip: { enabled: false, offsetX: 0 },
                crosshairs: { show: true, position: 'front', stroke: { color: '#b6b6b6', width: 1, dashArray: 0 } }
            }
        ],
        legend: { show: true },
        tooltip: {},
        annotations: { yaxis: [], xaxis: [], points: [] }
    }
};
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,