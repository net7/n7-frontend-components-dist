//---------------------------
// INPUT-SELECT.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class InputSelectComponent {
    onChange(inputPayload, value) {
        if (!this.emit)
            return;
        this.emit('change', { inputPayload, value });
    }
}
InputSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: InputSelectComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
InputSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: InputSelectComponent, selector: "n7-input-select", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data as input\"\n     class=\"n7-input-select\">\n  <label *ngIf=\"input.label\"\n         for=\"{{ input.id }}\" [innerHTML]=\"input.label\"></label>\n  <select (change)=\"onChange(input.payload, $event.target.value)\"\n          id=\"{{ input.id }}\"\n          class=\"n7-facet__input-select\"\n          [ngClass]=\"input.classes\"\n          [attr.name]=\"input.name\"\n          [disabled]=\"input.disabled\"\n          [required]=\"input.required\">\n    <option *ngFor=\"let option of input.options\"\n            [value]=\"option.value\"\n            [disabled]=\"option.disabled\"\n            [selected]=\"option.selected\"\n            [hidden]=\"option.hidden\"\n            [ngClass]=\"option.classes\">\n        {{ option.label }}\n    </option>\n  </select>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: InputSelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-input-select', template: "<div *ngIf=\"data as input\"\n     class=\"n7-input-select\">\n  <label *ngIf=\"input.label\"\n         for=\"{{ input.id }}\" [innerHTML]=\"input.label\"></label>\n  <select (change)=\"onChange(input.payload, $event.target.value)\"\n          id=\"{{ input.id }}\"\n          class=\"n7-facet__input-select\"\n          [ngClass]=\"input.classes\"\n          [attr.name]=\"input.name\"\n          [disabled]=\"input.disabled\"\n          [required]=\"input.required\">\n    <option *ngFor=\"let option of input.options\"\n            [value]=\"option.value\"\n            [disabled]=\"option.disabled\"\n            [selected]=\"option.selected\"\n            [hidden]=\"option.hidden\"\n            [ngClass]=\"option.classes\">\n        {{ option.label }}\n    </option>\n  </select>\n</div>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZHYtY29tcG9uZW50cy1saWIvc3JjL2xpYi9jb21wb25lbnRzL2lucHV0LXNlbGVjdC9pbnB1dC1zZWxlY3QudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtc2VsZWN0L2lucHV0LXNlbGVjdC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QjtBQUM3QixrQkFBa0I7QUFDbEIsNkJBQTZCO0FBRTdCLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFzRmpELE1BQU0sT0FBTyxvQkFBb0I7SUFLL0IsUUFBUSxDQUFDLFlBQVksRUFBRSxLQUFNO1FBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUFFLE9BQU87UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUMvQyxDQUFDOztpSEFSVSxvQkFBb0I7cUdBQXBCLG9CQUFvQiwrRkMxRmpDLDh4QkFxQkE7MkZEcUVhLG9CQUFvQjtrQkFKaEMsU0FBUzsrQkFDRSxpQkFBaUI7OEJBSWxCLElBQUk7c0JBQVosS0FBSztnQkFFRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSU5QVVQtU0VMRUNULnRzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5wdXRTZWxlY3RPcHRpb24ge1xuICAvKipcbiAgICogVGhlIHJlbmRlcmVkIHRleHQgZm9yIHRoZSA8b3B0aW9uPiBlbGVtZW50XG4gICAqL1xuICBsYWJlbDogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGV2ZW50IHZhbHVlIGZvciB0aGUgPG9wdGlvbj4gZWxlbWVudC5cbiAgICogSWYgdGhlIHZhbHVlIGlzIGVtcHR5IHN0cmluZywgdGhlIG9wdGlvbiB3aWxsXG4gICAqIGJlIHJlbmRlcmVkIGFzIHBsYWNlaG9sZGVyLlxuICAgKi9cbiAgdmFsdWU6IHN0cmluZyB8IG51bWJlcjtcbiAgLyoqXG4gICAqIFNldHMgdGhlIG9wdGlvbiBhcyBkZWZhdWx0IChzZWxlY3RlZClcbiAgICovXG4gIHNlbGVjdGVkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFByZXZlbnRzIHRoZSB1c2VyIGZyb20gc2VsZWN0aW5nIHRoaXMgb3B0aW9uXG4gICAqL1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBQcmV2ZW50cyB0aGUgb3B0aW9uIGZyb20gYXBwZWFyaW5nIGluIHRoZSBsaXN0XG4gICAqL1xuICBoaWRkZW4/OiBib29sZWFuO1xuICAvKipcbiAgICogQWRkaXRpb25hbCBIVE1MIGNsYXNzZXMgZm9yIHRoZSBvcHRpb25cbiAgICovXG4gIGNsYXNzZXM/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciBJbnB1dFNlbGVjdFxuICpcbiAqIEBwcm9wZXJ0eSBpZCAocmVxdWlyZWQpXG4gKiBAcHJvcGVydHkgb3B0aW9ucyAocmVxdWlyZWQpXG4gKiBAcHJvcGVydHkgbGFiZWwgKG9wdGlvbmFsKVxuICogQHByb3BlcnR5IGRpc2FibGVkIChvcHRpb25hbClcbiAqIEBwcm9wZXJ0eSBpY29uIChvcHRpb25hbClcbiAqIEBwcm9wZXJ0eSBwYXlsb2FkIChvcHRpb25hbClcbiAqIEBwcm9wZXJ0eSBjbGFzc2VzIChvcHRpb25hbClcbiAqIEBwcm9wZXJ0eSBfbWV0YSAob3B0aW9uYWwpXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSW5wdXRTZWxlY3REYXRhIHtcbiAgLyoqXG4gICAqIEEgdW5pcXVlIElEIGZvciB0aGUgc2VsZWN0IGl0ZW1cbiAgICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgY29udHJvbC5cbiAgICovXG4gIG5hbWU/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgYXJyYXkgb2YgPG9wdGlvbj4gZWxlbWVudHNcbiAgICovXG4gIG9wdGlvbnM6IEFycmF5PElucHV0U2VsZWN0T3B0aW9uPjtcbiAgLyoqXG4gICAqIExhYmVsIGZvciB0aGUgPHNlbGVjdD4gZWxlbWVudFxuICAgKi9cbiAgbGFiZWw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBQcmV2ZW50cyB0aGUgdXNlciBmcm9tIGNoYW5naW5nIGFueSBvcHRpb25cbiAgICovXG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIEZvcmNlcyB0aGUgdXNlciB0byBzZWxlY3QgYW4gb3B0aW9uXG4gICAqL1xuICByZXF1aXJlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBQYXlsb2FkIGZvciB0aGUgc2VsZWN0J3MgY2hhbmdlIGV2ZW50XG4gICAqL1xuICBwYXlsb2FkPzogYW55O1xuICAvKipcbiAgICogQWRkaXRpb25hbCBIVE1MIENsYXNzZXNcbiAgICovXG4gIGNsYXNzZXM/OiBhbnk7XG4gIC8qKlxuICAgKiBBZGRpdGlvbmFsIGRhdGEgZm9yIHRoZSBjb21wb25lbnQncyBsb2dpY1xuICAgKi9cbiAgX21ldGE/OiBhbnk7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ243LWlucHV0LXNlbGVjdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC1zZWxlY3QuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRTZWxlY3RDb21wb25lbnQge1xuICBASW5wdXQoKSBkYXRhOiBJbnB1dFNlbGVjdERhdGE7XG5cbiAgQElucHV0KCkgZW1pdDogYW55O1xuXG4gIG9uQ2hhbmdlKGlucHV0UGF5bG9hZCwgdmFsdWU/KSB7XG4gICAgaWYgKCF0aGlzLmVtaXQpIHJldHVybjtcbiAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHsgaW5wdXRQYXlsb2FkLCB2YWx1ZSB9KTtcbiAgfVxufVxuIiwiPGRpdiAqbmdJZj1cImRhdGEgYXMgaW5wdXRcIlxuICAgICBjbGFzcz1cIm43LWlucHV0LXNlbGVjdFwiPlxuICA8bGFiZWwgKm5nSWY9XCJpbnB1dC5sYWJlbFwiXG4gICAgICAgICBmb3I9XCJ7eyBpbnB1dC5pZCB9fVwiIFtpbm5lckhUTUxdPVwiaW5wdXQubGFiZWxcIj48L2xhYmVsPlxuICA8c2VsZWN0IChjaGFuZ2UpPVwib25DaGFuZ2UoaW5wdXQucGF5bG9hZCwgJGV2ZW50LnRhcmdldC52YWx1ZSlcIlxuICAgICAgICAgIGlkPVwie3sgaW5wdXQuaWQgfX1cIlxuICAgICAgICAgIGNsYXNzPVwibjctZmFjZXRfX2lucHV0LXNlbGVjdFwiXG4gICAgICAgICAgW25nQ2xhc3NdPVwiaW5wdXQuY2xhc3Nlc1wiXG4gICAgICAgICAgW2F0dHIubmFtZV09XCJpbnB1dC5uYW1lXCJcbiAgICAgICAgICBbZGlzYWJsZWRdPVwiaW5wdXQuZGlzYWJsZWRcIlxuICAgICAgICAgIFtyZXF1aXJlZF09XCJpbnB1dC5yZXF1aXJlZFwiPlxuICAgIDxvcHRpb24gKm5nRm9yPVwibGV0IG9wdGlvbiBvZiBpbnB1dC5vcHRpb25zXCJcbiAgICAgICAgICAgIFt2YWx1ZV09XCJvcHRpb24udmFsdWVcIlxuICAgICAgICAgICAgW2Rpc2FibGVkXT1cIm9wdGlvbi5kaXNhYmxlZFwiXG4gICAgICAgICAgICBbc2VsZWN0ZWRdPVwib3B0aW9uLnNlbGVjdGVkXCJcbiAgICAgICAgICAgIFtoaWRkZW5dPVwib3B0aW9uLmhpZGRlblwiXG4gICAgICAgICAgICBbbmdDbGFzc109XCJvcHRpb24uY2xhc3Nlc1wiPlxuICAgICAgICB7eyBvcHRpb24ubGFiZWwgfX1cbiAgICA8L29wdGlvbj5cbiAgPC9zZWxlY3Q+XG48L2Rpdj5cbiJdfQ==