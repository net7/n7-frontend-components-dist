//---------------------------
// INPUT-CHECKBOX.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class InputCheckboxComponent {
    onChange(inputPayload, value) {
        if (!this.emit)
            return;
        this.emit('change', { inputPayload, value });
    }
}
InputCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: InputCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
InputCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.2", type: InputCheckboxComponent, selector: "n7-input-checkbox", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"n7-input-checkbox {{ data.classes || '' }}\">\r\n    <fieldset class=\"n7-input-checkbox__fieldset\">\r\n        <legend class=\"n7-input-checkbox__legend\" *ngIf=\"data.legend\">{{ data.legend }}</legend>\r\n        <ng-container *ngFor=\"let input of data.checkboxes\">\r\n            <div class=\"n7-input-checkbox__input-wrapper\">\r\n                <input type=\"checkbox\"\r\n                 id=\"{{ input.id }}\"\r\n                 class=\"n7-input-checkbox__input {{ input.classes || '' }}\"\r\n                 [checked]=\"input.checked\"\r\n                 [disabled]=\"input.disabled\"\r\n                 (change)=\"onChange(input.payload, $event.target.checked)\">\r\n                <label *ngIf=\"input.label\"\r\n                 class=\"n7-input-checkbox__label\"\r\n                 for=\"{{ input.id }}\">{{ input.label }}</label>\r\n            </div>          \r\n        </ng-container>\r\n    </fieldset>\r\n</div>\r\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: InputCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-input-checkbox', template: "<div *ngIf=\"data\" class=\"n7-input-checkbox {{ data.classes || '' }}\">\r\n    <fieldset class=\"n7-input-checkbox__fieldset\">\r\n        <legend class=\"n7-input-checkbox__legend\" *ngIf=\"data.legend\">{{ data.legend }}</legend>\r\n        <ng-container *ngFor=\"let input of data.checkboxes\">\r\n            <div class=\"n7-input-checkbox__input-wrapper\">\r\n                <input type=\"checkbox\"\r\n                 id=\"{{ input.id }}\"\r\n                 class=\"n7-input-checkbox__input {{ input.classes || '' }}\"\r\n                 [checked]=\"input.checked\"\r\n                 [disabled]=\"input.disabled\"\r\n                 (change)=\"onChange(input.payload, $event.target.checked)\">\r\n                <label *ngIf=\"input.label\"\r\n                 class=\"n7-input-checkbox__label\"\r\n                 for=\"{{ input.id }}\">{{ input.label }}</label>\r\n            </div>          \r\n        </ng-container>\r\n    </fieldset>\r\n</div>\r\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtY2hlY2tib3guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtY2hlY2tib3gvaW5wdXQtY2hlY2tib3gudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQtY2hlY2tib3gvaW5wdXQtY2hlY2tib3guaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkI7QUFDN0Isb0JBQW9CO0FBQ3BCLDZCQUE2QjtBQUU3QixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBbUVqRCxNQUFNLE9BQU8sc0JBQXNCO0lBS2pDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsS0FBTTtRQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFBRSxPQUFPO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7bUhBUlUsc0JBQXNCO3VHQUF0QixzQkFBc0IsaUdDdkVuQywrOEJBa0JBOzJGRHFEYSxzQkFBc0I7a0JBSmxDLFNBQVM7K0JBQ0UsbUJBQW1COzhCQUlwQixJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gSU5QVVQtQ0hFQ0tCT1gudHNcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBJbnRlcmZhY2UgZm9yIElucHV0Q2hlY2tib3hcclxuICpcclxuICogQHByb3BlcnR5IGlkIChyZXF1aXJlZClcclxuICogQHByb3BlcnR5IGxhYmVsIChyZXF1aXJlZClcclxuICogQHByb3BlcnR5IGNoZWNrZWQgKG9wdGlvbmFsKVxyXG4gKiBAcHJvcGVydHkgZGlzYWJsZWQgKG9wdGlvbmFsKVxyXG4gKiBAcHJvcGVydHkgcGF5bG9hZCAob3B0aW9uYWwpXHJcbiAqIEBwcm9wZXJ0eSBjbGFzc2VzIChvcHRpb25hbClcclxuICogQHByb3BlcnR5IF9tZXRhIChvcHRpb25hbClcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5wdXRDaGVja2JveCB7XHJcbiAgLyoqXHJcbiAgICogVW5pcXVlIElEIGZvciB0aGUgY2hlY2tib3hcclxuICAgKi9cclxuICBpZDogc3RyaW5nO1xyXG4gIC8qKlxyXG4gICAqIExhYmVsIGZvciB0aGUgY2hlY2tib3hcclxuICAgKi9cclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIC8qKlxyXG4gICAqIERlZmF1bHRzIHRoZSBjaGVja2JveCB0byBiZSBjaGVja2VkXHJcbiAgICovXHJcbiAgY2hlY2tlZD86IGJvb2xlYW47XHJcbiAgLyoqXHJcbiAgICogU2V0cyB0aGUgZGlzYWJsZWQgSFRNTCBhdHRyaWJ1dGVcclxuICAgKi9cclxuICBkaXNhYmxlZD86IGJvb2xlYW47XHJcbiAgLyoqXHJcbiAgICogUGF5bG9hZCBmb3IgdGhlIGNoYW5nZSBldmVudFxyXG4gICAqL1xyXG4gIHBheWxvYWQ/OiBhbnk7XHJcbiAgLyoqXHJcbiAgICogQWRkaXRpb25hbCBIVE1MIENsYXNzZXNcclxuICAgKi9cclxuICBjbGFzc2VzPzogc3RyaW5nO1xyXG4gIC8qKlxyXG4gICAqIEFkZGl0aW9uYWwgZGF0YSBmb3IgdGhlIGNvbXBvbmVudCdzIGxvZ2ljXHJcbiAgICovXHJcbiAgX21ldGE/OiBhbnk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbnRlcmZhY2UgZm9yIElucHV0Q2hlY2tib3hEYXRhXHJcbiAqIEBwcm9wZXJ0eSBjaGVja2JveGVzIChyZXF1aXJlZClcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5wdXRDaGVja2JveERhdGEge1xyXG4gIC8qKlxyXG4gICAqIEFuIGFycmF5IG9mIGlucHV0IGNoZWNrYm94ZXNcclxuICAgKi9cclxuICBjaGVja2JveGVzOiBJbnB1dENoZWNrYm94W107XHJcbiAgLyoqXHJcbiAgICogRmllbGRzZXQgKGdyb3VwKSBsZWdlbmQgbGFiZWxcclxuICAgKi9cclxuICBsZWdlbmQ/OiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgICogQWRkaXRpb25hbCBIVE1MIENsYXNzZXNcclxuICAgKi9cclxuICBjbGFzc2VzPzogc3RyaW5nO1xyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ243LWlucHV0LWNoZWNrYm94JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtY2hlY2tib3guaHRtbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIElucHV0Q2hlY2tib3hDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpIGRhdGE6IElucHV0Q2hlY2tib3hEYXRhO1xyXG5cclxuICBASW5wdXQoKSBlbWl0OiBhbnk7XHJcblxyXG4gIG9uQ2hhbmdlKGlucHV0UGF5bG9hZCwgdmFsdWU/KSB7XHJcbiAgICBpZiAoIXRoaXMuZW1pdCkgcmV0dXJuO1xyXG4gICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB7IGlucHV0UGF5bG9hZCwgdmFsdWUgfSk7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgKm5nSWY9XCJkYXRhXCIgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveCB7eyBkYXRhLmNsYXNzZXMgfHwgJycgfX1cIj5cclxuICAgIDxmaWVsZHNldCBjbGFzcz1cIm43LWlucHV0LWNoZWNrYm94X19maWVsZHNldFwiPlxyXG4gICAgICAgIDxsZWdlbmQgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveF9fbGVnZW5kXCIgKm5nSWY9XCJkYXRhLmxlZ2VuZFwiPnt7IGRhdGEubGVnZW5kIH19PC9sZWdlbmQ+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaW5wdXQgb2YgZGF0YS5jaGVja2JveGVzXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveF9faW5wdXQtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiXHJcbiAgICAgICAgICAgICAgICAgaWQ9XCJ7eyBpbnB1dC5pZCB9fVwiXHJcbiAgICAgICAgICAgICAgICAgY2xhc3M9XCJuNy1pbnB1dC1jaGVja2JveF9faW5wdXQge3sgaW5wdXQuY2xhc3NlcyB8fCAnJyB9fVwiXHJcbiAgICAgICAgICAgICAgICAgW2NoZWNrZWRdPVwiaW5wdXQuY2hlY2tlZFwiXHJcbiAgICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cImlucHV0LmRpc2FibGVkXCJcclxuICAgICAgICAgICAgICAgICAoY2hhbmdlKT1cIm9uQ2hhbmdlKGlucHV0LnBheWxvYWQsICRldmVudC50YXJnZXQuY2hlY2tlZClcIj5cclxuICAgICAgICAgICAgICAgIDxsYWJlbCAqbmdJZj1cImlucHV0LmxhYmVsXCJcclxuICAgICAgICAgICAgICAgICBjbGFzcz1cIm43LWlucHV0LWNoZWNrYm94X19sYWJlbFwiXHJcbiAgICAgICAgICAgICAgICAgZm9yPVwie3sgaW5wdXQuaWQgfX1cIj57eyBpbnB1dC5sYWJlbCB9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICBcclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvZmllbGRzZXQ+XHJcbjwvZGl2PlxyXG4iXX0=