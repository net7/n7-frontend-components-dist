//---------------------------
// ITEM-PREVIEW.ts
//---------------------------
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../anchor-wrapper/anchor-wrapper";
import * as i2 from "@angular/common";
export class ItemPreviewComponent {
    onClick(payload) {
        if (!this.emit)
            return;
        this.emit('click', payload);
    }
}
ItemPreviewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: ItemPreviewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ItemPreviewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.2", type: ItemPreviewComponent, selector: "n7-item-preview", inputs: { data: "data", emit: "emit" }, ngImport: i0, template: "<div *ngIf=\"data\" class=\"n7-item-preview {{data.classes || ''}}\" \r\n     [ngClass]=\"{\r\n         'has-image' : !!data.image,\r\n         'has-color' : !!data.color,\r\n         'has-link'  : !!data.anchor\r\n    }\">\r\n    <n7-anchor-wrapper\r\n    [data]=\"data.anchor\"\r\n    (clicked)=\"onClick($event)\"\r\n    [classes]=\"'n7-item-preview__inner'\">\r\n        <!-- Image, color -->\r\n        <div class=\"n7-item-preview__image n7-item-preview__color\"\r\n            *ngIf=\"data.image || data.color\"\r\n            [style.background-image] = \"data.image ? 'url(' + data.image + ')' : undefined\"\r\n            [style.background-color] = \"data.color\">\r\n        </div>\r\n        <div class=\"n7-item-preview__content\">\r\n            <!-- Title and text -->\r\n            <div class=\"n7-item-preview__title-text\">\r\n                <h1 class=\"n7-item-preview__title\" [innerHTML]=\"data.title\"></h1>\r\n                <p class=\"n7-item-preview__text\" *ngIf=\"data.text\" [innerHTML]=\"data.text\"></p>\r\n            </div>\r\n            <!-- Metadata -->\r\n            <div class=\"n7-item-preview__metadata\" *ngIf=\"data.metadata\">\r\n                <div class=\"n7-item-preview__metadata-group {{ meta.classes || '' }}\" *ngFor=\"let meta of data.metadata\">\r\n                    <h3 class=\"n7-item-preview__metadata-group-title\" *ngIf=\"meta.title\" [innerHTML]=\"meta.title\"></h3>\r\n                    <div class=\"n7-item-preview__metadata-item {{ item.classes || '' }}\" *ngFor=\"let item of meta.items\">\r\n                        <span class=\"n7-item-preview__metadata-item-icon {{item.icon}}\" *ngIf=\"item.icon\"></span>\r\n                        <span class=\"n7-item-preview__metadata-item-label\" *ngIf=\"item.label\" [innerHTML]=\"item.label\"></span>\r\n                        <span class=\"n7-item-preview__metadata-item-value\" *ngIf=\"item.value\" [innerHTML]=\"item.value\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </n7-anchor-wrapper>\r\n</div>\r\n", components: [{ type: i1.AnchorWrapperComponent, selector: "n7-anchor-wrapper", inputs: ["data", "classes"], outputs: ["clicked"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.2", ngImport: i0, type: ItemPreviewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'n7-item-preview', template: "<div *ngIf=\"data\" class=\"n7-item-preview {{data.classes || ''}}\" \r\n     [ngClass]=\"{\r\n         'has-image' : !!data.image,\r\n         'has-color' : !!data.color,\r\n         'has-link'  : !!data.anchor\r\n    }\">\r\n    <n7-anchor-wrapper\r\n    [data]=\"data.anchor\"\r\n    (clicked)=\"onClick($event)\"\r\n    [classes]=\"'n7-item-preview__inner'\">\r\n        <!-- Image, color -->\r\n        <div class=\"n7-item-preview__image n7-item-preview__color\"\r\n            *ngIf=\"data.image || data.color\"\r\n            [style.background-image] = \"data.image ? 'url(' + data.image + ')' : undefined\"\r\n            [style.background-color] = \"data.color\">\r\n        </div>\r\n        <div class=\"n7-item-preview__content\">\r\n            <!-- Title and text -->\r\n            <div class=\"n7-item-preview__title-text\">\r\n                <h1 class=\"n7-item-preview__title\" [innerHTML]=\"data.title\"></h1>\r\n                <p class=\"n7-item-preview__text\" *ngIf=\"data.text\" [innerHTML]=\"data.text\"></p>\r\n            </div>\r\n            <!-- Metadata -->\r\n            <div class=\"n7-item-preview__metadata\" *ngIf=\"data.metadata\">\r\n                <div class=\"n7-item-preview__metadata-group {{ meta.classes || '' }}\" *ngFor=\"let meta of data.metadata\">\r\n                    <h3 class=\"n7-item-preview__metadata-group-title\" *ngIf=\"meta.title\" [innerHTML]=\"meta.title\"></h3>\r\n                    <div class=\"n7-item-preview__metadata-item {{ item.classes || '' }}\" *ngFor=\"let item of meta.items\">\r\n                        <span class=\"n7-item-preview__metadata-item-icon {{item.icon}}\" *ngIf=\"item.icon\"></span>\r\n                        <span class=\"n7-item-preview__metadata-item-label\" *ngIf=\"item.label\" [innerHTML]=\"item.label\"></span>\r\n                        <span class=\"n7-item-preview__metadata-item-value\" *ngIf=\"item.value\" [innerHTML]=\"item.value\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </n7-anchor-wrapper>\r\n</div>\r\n" }]
        }], propDecorators: { data: [{
                type: Input
            }], emit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS1wcmV2aWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZHYtY29tcG9uZW50cy1saWIvc3JjL2xpYi9jb21wb25lbnRzL2l0ZW0tcHJldmlldy9pdGVtLXByZXZpZXcudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9kdi1jb21wb25lbnRzLWxpYi9zcmMvbGliL2NvbXBvbmVudHMvaXRlbS1wcmV2aWV3L2l0ZW0tcHJldmlldy5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QjtBQUM3QixrQkFBa0I7QUFDbEIsNkJBQTZCO0FBRTdCLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBOEZqRCxNQUFNLE9BQU8sb0JBQW9CO0lBSy9CLE9BQU8sQ0FBQyxPQUFZO1FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUFFLE9BQU87UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7aUhBUlUsb0JBQW9CO3FHQUFwQixvQkFBb0IsK0ZDbEdqQywyaUVBb0NBOzJGRDhEYSxvQkFBb0I7a0JBSmhDLFNBQVM7K0JBQ0UsaUJBQWlCOzhCQUlsQixJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gSVRFTS1QUkVWSUVXLnRzXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFuY2hvciB9IGZyb20gJy4uLy4uL3NoYXJlZC1pbnRlcmZhY2VzJztcclxuXHJcbi8qKlxyXG4gKiBJbnRlcmZhY2UgZm9yIEl0ZW1QcmV2aWV3Q29tcG9uZW50J3MgXCJkYXRhXCJcclxuICpcclxuICogQHByb3BlcnR5IGltYWdlIChvcHRpb25hbClcclxuICogQHByb3BlcnR5IHRpdGxlIChyZXF1aXJlZClcclxuICogQHByb3BlcnR5IHRleHQgKG9wdGlvbmFsKVxyXG4gKiBAcHJvcGVydHkgYW5jaG9yIChvcHRpb25hbClcclxuICogQHByb3BlcnR5IG1ldGFkYXRhIChvcHRpb25hbClcclxuICogQHByb3BlcnR5IGNsYXNzZXMgKG9wdGlvbmFsKVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBJdGVtUHJldmlld0RhdGEge1xyXG4gIC8qKlxyXG4gICogaW1hZ2Ugb2YgdGhlIHByZXZpZXdcclxuICAqL1xyXG4gIGltYWdlPzogc3RyaW5nO1xyXG4gIC8qKlxyXG4gICAqIENzcyBjb2RlIGZvciB0aGUgaW5saW5lIGJhY2tncm91bmQgY29sb3JcclxuICAgKi9cclxuICBjb2xvcj86IHN0cmluZztcclxuICAvKipcclxuICAqIG5hbWUgb2YgdGhlIGl0ZW1cclxuICAqL1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgLyoqXHJcbiAgKiB0ZXh0IG9mIHRoZSBpdGVtXHJcbiAgKi9cclxuICB0ZXh0Pzogc3RyaW5nO1xyXG4gIGFuY2hvcj86IEFuY2hvcjtcclxuICAvKipcclxuICAqIGxpc3Qgb2YgdGhlIGRhdGEgaW4gdGhlIG1ldGFkYXRhXHJcbiAgKi9cclxuICBtZXRhZGF0YT86IE1ldGFkYXRhR3JvdXBbXTtcclxuICAvKipcclxuICAgKiBhZGRpdGlvbmFsIGh0bWwgY2xhc3Nlc1xyXG4gICAqL1xyXG4gIGNsYXNzZXM/OiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbnRlcmZhY2UgZm9yIHRoZSBlbGVtZW50IHRoYXQgd3JhcHMgdGhlIG1ldGFkYXRhXHJcbiAqXHJcbiAqIEBwcm9wZXJ0eSB0aXRsZSAob3B0aW9uYWwpXHJcbiAqIEBwcm9wZXJ0eSBjbGFzc2VzIChvcHRpb25hbClcclxuICogQHByb3BlcnR5IGl0ZW1zIChvcHRpb25hbClcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWV0YWRhdGFHcm91cCB7XHJcbiAgLyoqXHJcbiAgICogdGl0bGUgb2YgbWV0YWRhdGEgZ3JvdXBcclxuICAgKi9cclxuICB0aXRsZT86IHN0cmluZztcclxuICAvKipcclxuICAgKiBjbGFzc2VzIG9mIG1ldGFkYXRhIGdyb3VwXHJcbiAgICovXHJcbiAgY2xhc3Nlcz86IHN0cmluZztcclxuICAvKipcclxuICAgKiBhcnJheSBvZiBtZXRhZGF0YSBpdGVtc1xyXG4gICAqL1xyXG4gIGl0ZW1zPzogTWV0YWRhdGFEYXRhW107XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbnRlcmZhY2UgZm9yIGEgbGlzdCBvZiBtZXRhZGF0YVxyXG4gKlxyXG4gKiBAcHJvcGVydHkgbGFiZWwgKG9wdGlvbmFsKVxyXG4gKiBAcHJvcGVydHkgdmFsdWUgKG9wdGlvbmFsKVxyXG4gKiBAcHJvcGVydHkgY2xhc3NlcyAob3B0aW9uYWwpXHJcbiAqIEBwcm9wZXJ0eSBpY29uIChvcHRpb25hbClcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWV0YWRhdGFEYXRhIHtcclxuICAvKipcclxuICAgKiBsYWJlbCBvZiBhIHNpbmdsZSBwcm9wZXJ0eSBvZiB0aGUgbWV0YWRhdGFcclxuICAgKi9cclxuICBsYWJlbD86IHN0cmluZztcclxuICAvKipcclxuICAgKiB2YWx1ZSBvZiBhIHNpbmdsZSBwcm9wZXJ0eSBvZiB0aGUgbWV0YWRhdGFcclxuICAgKi9cclxuICB2YWx1ZT86IHN0cmluZztcclxuICAvKipcclxuICAgKiBjYXRlZ29yeSBvZiBhIGl0ZW0gb2YgdGhlIGljb24gbGlzdCwgdXNlZCB0byBnaXZlIGEgZGlmZmVyZW50IGNsYXNzXHJcbiAgICovXHJcbiAgY2xhc3Nlcz86IHN0cmluZztcclxuICAvKipcclxuICAgKiBpY29uIG9mIGFuIGl0ZW0gb2YgdGhlIGljb24gbGlzdFxyXG4gICAqL1xyXG4gIGljb24/OiBzdHJpbmc7XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbjctaXRlbS1wcmV2aWV3JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vaXRlbS1wcmV2aWV3Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJdGVtUHJldmlld0NvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgZGF0YTogSXRlbVByZXZpZXdEYXRhO1xyXG5cclxuICBASW5wdXQoKSBlbWl0OiBhbnk7XHJcblxyXG4gIG9uQ2xpY2socGF5bG9hZDogYW55KSB7XHJcbiAgICBpZiAoIXRoaXMuZW1pdCkgcmV0dXJuO1xyXG4gICAgdGhpcy5lbWl0KCdjbGljaycsIHBheWxvYWQpO1xyXG4gIH1cclxufVxyXG4iLCI8ZGl2ICpuZ0lmPVwiZGF0YVwiIGNsYXNzPVwibjctaXRlbS1wcmV2aWV3IHt7ZGF0YS5jbGFzc2VzIHx8ICcnfX1cIiBcclxuICAgICBbbmdDbGFzc109XCJ7XHJcbiAgICAgICAgICdoYXMtaW1hZ2UnIDogISFkYXRhLmltYWdlLFxyXG4gICAgICAgICAnaGFzLWNvbG9yJyA6ICEhZGF0YS5jb2xvcixcclxuICAgICAgICAgJ2hhcy1saW5rJyAgOiAhIWRhdGEuYW5jaG9yXHJcbiAgICB9XCI+XHJcbiAgICA8bjctYW5jaG9yLXdyYXBwZXJcclxuICAgIFtkYXRhXT1cImRhdGEuYW5jaG9yXCJcclxuICAgIChjbGlja2VkKT1cIm9uQ2xpY2soJGV2ZW50KVwiXHJcbiAgICBbY2xhc3Nlc109XCInbjctaXRlbS1wcmV2aWV3X19pbm5lcidcIj5cclxuICAgICAgICA8IS0tIEltYWdlLCBjb2xvciAtLT5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibjctaXRlbS1wcmV2aWV3X19pbWFnZSBuNy1pdGVtLXByZXZpZXdfX2NvbG9yXCJcclxuICAgICAgICAgICAgKm5nSWY9XCJkYXRhLmltYWdlIHx8IGRhdGEuY29sb3JcIlxyXG4gICAgICAgICAgICBbc3R5bGUuYmFja2dyb3VuZC1pbWFnZV0gPSBcImRhdGEuaW1hZ2UgPyAndXJsKCcgKyBkYXRhLmltYWdlICsgJyknIDogdW5kZWZpbmVkXCJcclxuICAgICAgICAgICAgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdID0gXCJkYXRhLmNvbG9yXCI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIm43LWl0ZW0tcHJldmlld19fY29udGVudFwiPlxyXG4gICAgICAgICAgICA8IS0tIFRpdGxlIGFuZCB0ZXh0IC0tPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibjctaXRlbS1wcmV2aWV3X190aXRsZS10ZXh0XCI+XHJcbiAgICAgICAgICAgICAgICA8aDEgY2xhc3M9XCJuNy1pdGVtLXByZXZpZXdfX3RpdGxlXCIgW2lubmVySFRNTF09XCJkYXRhLnRpdGxlXCI+PC9oMT5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibjctaXRlbS1wcmV2aWV3X190ZXh0XCIgKm5nSWY9XCJkYXRhLnRleHRcIiBbaW5uZXJIVE1MXT1cImRhdGEudGV4dFwiPjwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwhLS0gTWV0YWRhdGEgLS0+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuNy1pdGVtLXByZXZpZXdfX21ldGFkYXRhXCIgKm5nSWY9XCJkYXRhLm1ldGFkYXRhXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibjctaXRlbS1wcmV2aWV3X19tZXRhZGF0YS1ncm91cCB7eyBtZXRhLmNsYXNzZXMgfHwgJycgfX1cIiAqbmdGb3I9XCJsZXQgbWV0YSBvZiBkYXRhLm1ldGFkYXRhXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPVwibjctaXRlbS1wcmV2aWV3X19tZXRhZGF0YS1ncm91cC10aXRsZVwiICpuZ0lmPVwibWV0YS50aXRsZVwiIFtpbm5lckhUTUxdPVwibWV0YS50aXRsZVwiPjwvaDM+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm43LWl0ZW0tcHJldmlld19fbWV0YWRhdGEtaXRlbSB7eyBpdGVtLmNsYXNzZXMgfHwgJycgfX1cIiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBtZXRhLml0ZW1zXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibjctaXRlbS1wcmV2aWV3X19tZXRhZGF0YS1pdGVtLWljb24ge3tpdGVtLmljb259fVwiICpuZ0lmPVwiaXRlbS5pY29uXCI+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm43LWl0ZW0tcHJldmlld19fbWV0YWRhdGEtaXRlbS1sYWJlbFwiICpuZ0lmPVwiaXRlbS5sYWJlbFwiIFtpbm5lckhUTUxdPVwiaXRlbS5sYWJlbFwiPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJuNy1pdGVtLXByZXZpZXdfX21ldGFkYXRhLWl0ZW0tdmFsdWVcIiAqbmdJZj1cIml0ZW0udmFsdWVcIiBbaW5uZXJIVE1MXT1cIml0ZW0udmFsdWVcIj48L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L243LWFuY2hvci13cmFwcGVyPlxyXG48L2Rpdj5cclxuIl19