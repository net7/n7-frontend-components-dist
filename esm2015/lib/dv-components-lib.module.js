/**
 * @fileoverview added by tsickle
 * Generated from: lib/dv-components-lib.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { AdvancedAutocompleteComponent } from './components/advanced-autocomplete/advanced-autocomplete';
import { AlertComponent } from './components/alert/alert';
import { BreadcrumbsComponent } from './components/breadcrumbs/breadcrumbs';
import { BubbleChartComponent } from './components/bubble-chart/bubble-chart';
import { ChartComponent } from './components/chart/chart';
import { ContentPlaceholderComponent } from './components/content-placeholder/content-placeholder';
import { DataWidgetComponent } from './components/data-widget/data-widget';
import { DatepickerComponent } from './components/datepicker/datepicker';
import { FacetComponent } from './components/facet/facet';
import { FacetHeaderComponent } from './components/facet-header/facet-header';
import { FacetYearRangeComponent } from './components/facet-year-range/facet-year-range';
import { FooterComponent } from './components/footer/footer';
import { HeaderComponent } from './components/header/header';
import { HeroComponent } from './components/hero/hero';
import { ImageViewerComponent } from './components/image-viewer/image-viewer';
import { InnerTitleComponent } from './components/inner-title/inner-title';
import { ItemPreviewComponent } from './components/item-preview/item-preview';
import { AnchorWrapperComponent } from './components/anchor-wrapper/anchor-wrapper';
import { LoaderComponent } from './components/loader/loader';
import { MetadataViewerComponent } from './components/metadata-viewer/metadata-viewer';
import { NavComponent } from './components/nav/nav';
import { PaginationComponent } from './components/pagination/pagination';
import { SidebarHeaderComponent } from './components/sidebar-header/sidebar-header';
import { SignupComponent } from './components/signup/signup';
import { SimpleAutocompleteComponent } from './components/simple-autocomplete/simple-autocomplete';
import { TableComponent } from './components/table/table';
import { TagComponent } from './components/tag/tag';
import { ToastComponent } from './components/toast/toast';
import { TreeComponent } from './components/tree/tree';
import { WizardComponent } from './components/wizard/wizard';
/** @type {?} */
const COMPONENTS = [
    AdvancedAutocompleteComponent,
    AlertComponent,
    BreadcrumbsComponent,
    BubbleChartComponent,
    ChartComponent,
    ContentPlaceholderComponent,
    DataWidgetComponent,
    DatepickerComponent,
    FacetComponent,
    FacetHeaderComponent,
    FacetYearRangeComponent,
    FooterComponent,
    HeaderComponent,
    HeroComponent,
    ImageViewerComponent,
    InnerTitleComponent,
    ItemPreviewComponent,
    AnchorWrapperComponent,
    LoaderComponent,
    MetadataViewerComponent,
    NavComponent,
    PaginationComponent,
    SidebarHeaderComponent,
    SignupComponent,
    SimpleAutocompleteComponent,
    TableComponent,
    TagComponent,
    ToastComponent,
    TreeComponent,
    WizardComponent,
];
export class DvComponentsLibModule {
}
DvComponentsLibModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    COMPONENTS,
                ],
                entryComponents: COMPONENTS,
                imports: [CommonModule, RouterModule],
                exports: [
                    COMPONENTS,
                ],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHYtY29tcG9uZW50cy1saWIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG43LWZyb250ZW5kL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvZHYtY29tcG9uZW50cy1saWIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDbkcsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDekUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUN2RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDekUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7O01BRXZELFVBQVUsR0FBRztJQUNqQiw2QkFBNkI7SUFDN0IsY0FBYztJQUNkLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsY0FBYztJQUNkLDJCQUEyQjtJQUMzQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZixlQUFlO0lBQ2YsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQixtQkFBbUI7SUFDbkIsb0JBQW9CO0lBQ3BCLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZiwyQkFBMkI7SUFDM0IsY0FBYztJQUNkLFlBQVk7SUFDWixjQUFjO0lBQ2QsYUFBYTtJQUNiLGVBQWU7Q0FDaEI7QUFZRCxNQUFNLE9BQU8scUJBQXFCOzs7WUFWakMsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixVQUFVO2lCQUNYO2dCQUNELGVBQWUsRUFBRSxVQUFVO2dCQUMzQixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDO2dCQUNyQyxPQUFPLEVBQUU7b0JBQ1AsVUFBVTtpQkFDWDthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuXHJcbmltcG9ydCB7IEFkdmFuY2VkQXV0b2NvbXBsZXRlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FkdmFuY2VkLWF1dG9jb21wbGV0ZS9hZHZhbmNlZC1hdXRvY29tcGxldGUnO1xyXG5pbXBvcnQgeyBBbGVydENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hbGVydC9hbGVydCc7XHJcbmltcG9ydCB7IEJyZWFkY3J1bWJzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2JyZWFkY3J1bWJzL2JyZWFkY3J1bWJzJztcclxuaW1wb3J0IHsgQnViYmxlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYnViYmxlLWNoYXJ0L2J1YmJsZS1jaGFydCc7XHJcbmltcG9ydCB7IENoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2NoYXJ0L2NoYXJ0JztcclxuaW1wb3J0IHsgQ29udGVudFBsYWNlaG9sZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2NvbnRlbnQtcGxhY2Vob2xkZXIvY29udGVudC1wbGFjZWhvbGRlcic7XHJcbmltcG9ydCB7IERhdGFXaWRnZXRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZGF0YS13aWRnZXQvZGF0YS13aWRnZXQnO1xyXG5pbXBvcnQgeyBEYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2RhdGVwaWNrZXIvZGF0ZXBpY2tlcic7XHJcbmltcG9ydCB7IEZhY2V0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZhY2V0L2ZhY2V0JztcclxuaW1wb3J0IHsgRmFjZXRIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZmFjZXQtaGVhZGVyL2ZhY2V0LWhlYWRlcic7XHJcbmltcG9ydCB7IEZhY2V0WWVhclJhbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ZhY2V0LXllYXItcmFuZ2UvZmFjZXQteWVhci1yYW5nZSc7XHJcbmltcG9ydCB7IEZvb3RlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9mb290ZXIvZm9vdGVyJztcclxuaW1wb3J0IHsgSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2hlYWRlci9oZWFkZXInO1xyXG5pbXBvcnQgeyBIZXJvQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2hlcm8vaGVybyc7XHJcbmltcG9ydCB7IEltYWdlVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2ltYWdlLXZpZXdlci9pbWFnZS12aWV3ZXInO1xyXG5pbXBvcnQgeyBJbm5lclRpdGxlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2lubmVyLXRpdGxlL2lubmVyLXRpdGxlJztcclxuaW1wb3J0IHsgSXRlbVByZXZpZXdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvaXRlbS1wcmV2aWV3L2l0ZW0tcHJldmlldyc7XHJcbmltcG9ydCB7IEFuY2hvcldyYXBwZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYW5jaG9yLXdyYXBwZXIvYW5jaG9yLXdyYXBwZXInO1xyXG5pbXBvcnQgeyBMb2FkZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbG9hZGVyL2xvYWRlcic7XHJcbmltcG9ydCB7IE1ldGFkYXRhVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL21ldGFkYXRhLXZpZXdlci9tZXRhZGF0YS12aWV3ZXInO1xyXG5pbXBvcnQgeyBOYXZDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmF2L25hdic7XHJcbmltcG9ydCB7IFBhZ2luYXRpb25Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9wYWdpbmF0aW9uJztcclxuaW1wb3J0IHsgU2lkZWJhckhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zaWRlYmFyLWhlYWRlci9zaWRlYmFyLWhlYWRlcic7XHJcbmltcG9ydCB7IFNpZ251cENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zaWdudXAvc2lnbnVwJztcclxuaW1wb3J0IHsgU2ltcGxlQXV0b2NvbXBsZXRlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NpbXBsZS1hdXRvY29tcGxldGUvc2ltcGxlLWF1dG9jb21wbGV0ZSc7XHJcbmltcG9ydCB7IFRhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RhYmxlL3RhYmxlJztcclxuaW1wb3J0IHsgVGFnQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RhZy90YWcnO1xyXG5pbXBvcnQgeyBUb2FzdENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90b2FzdC90b2FzdCc7XHJcbmltcG9ydCB7IFRyZWVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZS90cmVlJztcclxuaW1wb3J0IHsgV2l6YXJkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3dpemFyZC93aXphcmQnO1xyXG5cclxuY29uc3QgQ09NUE9ORU5UUyA9IFtcclxuICBBZHZhbmNlZEF1dG9jb21wbGV0ZUNvbXBvbmVudCxcclxuICBBbGVydENvbXBvbmVudCxcclxuICBCcmVhZGNydW1ic0NvbXBvbmVudCxcclxuICBCdWJibGVDaGFydENvbXBvbmVudCxcclxuICBDaGFydENvbXBvbmVudCxcclxuICBDb250ZW50UGxhY2Vob2xkZXJDb21wb25lbnQsXHJcbiAgRGF0YVdpZGdldENvbXBvbmVudCxcclxuICBEYXRlcGlja2VyQ29tcG9uZW50LFxyXG4gIEZhY2V0Q29tcG9uZW50LFxyXG4gIEZhY2V0SGVhZGVyQ29tcG9uZW50LFxyXG4gIEZhY2V0WWVhclJhbmdlQ29tcG9uZW50LFxyXG4gIEZvb3RlckNvbXBvbmVudCxcclxuICBIZWFkZXJDb21wb25lbnQsXHJcbiAgSGVyb0NvbXBvbmVudCxcclxuICBJbWFnZVZpZXdlckNvbXBvbmVudCxcclxuICBJbm5lclRpdGxlQ29tcG9uZW50LFxyXG4gIEl0ZW1QcmV2aWV3Q29tcG9uZW50LFxyXG4gIEFuY2hvcldyYXBwZXJDb21wb25lbnQsXHJcbiAgTG9hZGVyQ29tcG9uZW50LFxyXG4gIE1ldGFkYXRhVmlld2VyQ29tcG9uZW50LFxyXG4gIE5hdkNvbXBvbmVudCxcclxuICBQYWdpbmF0aW9uQ29tcG9uZW50LFxyXG4gIFNpZGViYXJIZWFkZXJDb21wb25lbnQsXHJcbiAgU2lnbnVwQ29tcG9uZW50LFxyXG4gIFNpbXBsZUF1dG9jb21wbGV0ZUNvbXBvbmVudCxcclxuICBUYWJsZUNvbXBvbmVudCxcclxuICBUYWdDb21wb25lbnQsXHJcbiAgVG9hc3RDb21wb25lbnQsXHJcbiAgVHJlZUNvbXBvbmVudCxcclxuICBXaXphcmRDb21wb25lbnQsXHJcbl07XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgQ09NUE9ORU5UUyxcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogQ09NUE9ORU5UUyxcclxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBSb3V0ZXJNb2R1bGVdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIENPTVBPTkVOVFMsXHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIER2Q29tcG9uZW50c0xpYk1vZHVsZSB7IH1cclxuIl19