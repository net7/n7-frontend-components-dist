var TextViewerComponent_1;
import { __decorate, __metadata } from "tslib";
//---------------------------
// TEXT-VIEWER.ts
//---------------------------
import { Component, Input } from '@angular/core';
let TextViewerComponent = TextViewerComponent_1 = class TextViewerComponent {
    ngOnInit() {
        if (!TextViewerComponent_1._loaded) {
            const s = document.createElement('script');
            s.setAttribute('src', '/assets/pb-components/dist/pb-components-bundle.js');
            s.setAttribute('type', 'module');
            s.onload = this.onScriptLoaded;
            document.head.appendChild(s);
        }
    }
    onScriptLoaded() {
        TextViewerComponent_1._loaded = true;
    }
    onClick(payload) {
        if (!this.emit)
            return;
        this.emit('click', payload);
    }
};
TextViewerComponent._loaded = false;
__decorate([
    Input(),
    __metadata("design:type", Object)
], TextViewerComponent.prototype, "data", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TextViewerComponent.prototype, "emit", void 0);
TextViewerComponent = TextViewerComponent_1 = __decorate([
    Component({
        selector: 'n7-text-viewer',
        template: "<!-- NEW -->\r\n<div class=\"n7-text-viewer {{data.classes || ''}}\" *ngIf=\"data && data.endpoint\">\r\n    <pb-page [attr.endpoint]=\"data.endpoint\">\r\n        <pb-document *ngFor=\"let doc of data.docs\" [path]=\"doc.xml\" [odd]=\"doc.odd\" view=\"div\" [id]=\"doc.id\">\r\n        </pb-document>\r\n\r\n        <app-drawer-layout force-narrow=\"force-narrow\" narrow=\"\">\r\n            <app-header-layout>\r\n                <app-header fixed=\"fixed\" data-template=\"browse:fix-links\" style=\"\r\n                transition-duration: 0ms;\r\n                transform: translate3d(0px, 0px, 0px);\r\n                left: 0px;\r\n                right: 0.399994px;\">\r\n                    <app-toolbar class=\"toolbar\" sticky=\"sticky\" style=\"transform: translate3d(0px, 0px, 0px)\">\r\n                        <paper-icon-button id=\"tocToggle\" class=\"toc-toggle\" icon=\"icons:view-list\" role=\"button\"\r\n                            tabindex=\"0\" aria-disabled=\"false\"></paper-icon-button>\r\n\r\n                        <pb-toggle-feature name=\"highlight\" selector=\"tei-app,pb-popover\" default=\"off\"\r\n                            action=\"disable\" emit=\"transcription\" subscribe=\"transcription\">\r\n                            <pb-i18n key=\"document.plain\">Plain Reading View</pb-i18n>\r\n                        </pb-toggle-feature>\r\n                        <pb-zoom emit=\"transcription\" direction=\"in\" icon=\"icons:zoom-in\"></pb-zoom>\r\n                        <pb-zoom emit=\"transcription\" direction=\"out\" icon=\"icons:zoom-out\"></pb-zoom>\r\n                        <pb-navigation emit=\"transcription\" keyboard=\"left\" subscribe=\"transcription\"\r\n                            direction=\"backward\" unit=\"page\">\r\n                            <paper-icon-button icon=\"icons:chevron-left\" role=\"button\" tabindex=\"0\"\r\n                                aria-disabled=\"false\"></paper-icon-button>\r\n                        </pb-navigation>\r\n                        <pb-navigation emit=\"transcription\" keyboard=\"right\" subscribe=\"transcription\"\r\n                            direction=\"forward\" unit=\"page\">\r\n                            <paper-icon-button icon=\"icons:chevron-right\" role=\"button\" tabindex=\"0\"\r\n                                aria-disabled=\"false\"></paper-icon-button>\r\n                        </pb-navigation>\r\n\r\n                        <pb-progress subscribe=\"transcription\" indeterminate=\"\" bottom-item=\"bottom-item\"\r\n                            style=\"visibility: hidden\"></pb-progress>\r\n                    </app-toolbar>\r\n                </app-header>\r\n                <pb-drawer toggle=\"tocToggle\" class=\"tocDrawer\" emit=\"toc\" subscribe=\"transcription\">\r\n                    <div class=\"drawer-content\">\r\n                        <h3>\r\n                            <pb-i18n key=\"document.contents\">Contents</pb-i18n>\r\n                        </h3>\r\n                        <pb-load *ngIf=\"data.docs\" id=\"toc\" url=\"api/document/{doc}/contents?target=transcription&amp;icons=true\"\r\n                            [src]=\"data.docs[0].id\" subscribe=\"toc\" emit=\"toc\" expand=\"expand\" auto=\"auto\"><pb-i18n key=\"dialogs.loading\">Loading</pb-i18n></pb-load>\r\n                    </div>\r\n                </pb-drawer>\r\n                <main class=\"content-body\">\r\n                    <pb-facsimile *ngIf=\"data.facsimile\" id=\"facsimile\" [attr.base-uri]=\"data.facsimile.uri\"\r\n                        subscribe=\"transcription\" default-zoom-level=\"0\"\r\n                        show-navigation-control=\"show-navigation-control\" show-navigator=\"show-navigator\">\r\n                    </pb-facsimile>\r\n                    <ng-container *ngFor=\"let doc of data.docs; index as $i;\">\r\n                        <!-- NO CHANNEL -->\r\n                        <pb-view *ngIf=\"!doc.channel\" id=\"view{{ $i }}\" [src]=\"doc.id\" subscribe=\"transcription\"\r\n                            emit=\"transcription\" [attr.wait-for]=\"data.facsimile ? '#facsimile' : null\" column-separator=\".tei-cb\"\r\n                            append-footnotes=\"append-footnotes\" view=\"div\"></pb-view>\r\n                        <!-- WITH CHANNEL -->\r\n                        <pb-view *ngIf=\"doc.channel\" id=\"view{{ $i }}\" [src]=\"doc.id\" emit=\"{{ doc.channel }}\"\r\n                        view=\"single\">\r\n                            <pb-param name=\"mode\" value=\"{{ doc.channel }}\"></pb-param>\r\n                        </pb-view>\r\n                    </ng-container>\r\n                </main>\r\n            </app-header-layout>\r\n        </app-drawer-layout>\r\n    </pb-page>\r\n</div>"
    })
], TextViewerComponent);
export { TextViewerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC12aWV3ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbjctZnJvbnRlbmQvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RleHQtdmlld2VyL3RleHQtdmlld2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQiw2QkFBNkI7QUFDN0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFvQ3pELElBQWEsbUJBQW1CLDJCQUFoQyxNQUFhLG1CQUFtQjtJQU85QixRQUFRO1FBQ04sSUFBSSxDQUFDLHFCQUFtQixDQUFDLE9BQU8sRUFBRTtZQUNoQyxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzNDLENBQUMsQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLG9EQUFvRCxDQUFDLENBQUM7WUFDNUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDakMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1lBQy9CLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQztJQUVELGNBQWM7UUFDWixxQkFBbUIsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxPQUFPLENBQUMsT0FBTztRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUFFLE9BQU87UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDOUIsQ0FBQztDQUNGLENBQUE7QUFwQlEsMkJBQU8sR0FBRyxLQUFLLENBQUM7QUFKZDtJQUFSLEtBQUssRUFBRTs7aURBQXNCO0FBRXJCO0lBQVIsS0FBSyxFQUFFOztpREFBVztBQUhSLG1CQUFtQjtJQUovQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsZ0JBQWdCO1FBQzFCLDZySkFBaUM7S0FDbEMsQ0FBQztHQUNXLG1CQUFtQixDQXlCL0I7U0F6QlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gVEVYVC1WSUVXRVIudHNcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vKipcclxuICogSW50ZXJmYWNlIGZvciBUZXh0Vmlld2VyQ29tcG9uZW50J3MgXCJkYXRhXCJcclxuICogQHByb3BlcnR5IGVuZHBvaW50IChyZXF1aXJlZClcclxuICogQHByb3BlcnR5IGRvYyAocmVxdWlyZWQpXHJcbiAqIEBwcm9wZXJ0eSBmYWNzaW1pbGUgKG9wdGlvbmFsKVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBUZXh0Vmlld2VyRGF0YSB7XHJcbiAgLypcclxuICAgICAqIFRFSVB1YiBzZXJ2ZXIgZW5kcG9pbnRcclxuICAqL1xyXG4gIGVuZHBvaW50OiBzdHJpbmc7XHJcbiAgLypcclxuICAgICAqIFhNTCBhbmQgT0REIHBhdGhzXHJcbiAgKi9cclxuICBkb2NzOiB7XHJcbiAgICB4bWw6IHN0cmluZztcclxuICAgIG9kZDogc3RyaW5nO1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIGNoYW5uZWw/OiBzdHJpbmc7XHJcbiAgfVtdO1xyXG4gIC8qXHJcbiAgICAgKiBJSUlGIHNlcnZlciBlbmRwb2ludFxyXG4gICovXHJcbiAgZmFjc2ltaWxlPzogYW55O1xyXG4gIC8qKlxyXG4gICAqIGFkZGl0aW9uYWwgaHRtbCBjbGFzc2VzXHJcbiAgICovXHJcbiAgY2xhc3Nlcz86IHN0cmluZztcclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduNy10ZXh0LXZpZXdlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3RleHQtdmlld2VyLmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGV4dFZpZXdlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgZGF0YTogVGV4dFZpZXdlckRhdGE7XHJcblxyXG4gIEBJbnB1dCgpIGVtaXQ6IGFueTtcclxuXHJcbiAgc3RhdGljIF9sb2FkZWQgPSBmYWxzZTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZiAoIVRleHRWaWV3ZXJDb21wb25lbnQuX2xvYWRlZCkge1xyXG4gICAgICBjb25zdCBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcbiAgICAgIHMuc2V0QXR0cmlidXRlKCdzcmMnLCAnL2Fzc2V0cy9wYi1jb21wb25lbnRzL2Rpc3QvcGItY29tcG9uZW50cy1idW5kbGUuanMnKTtcclxuICAgICAgcy5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnbW9kdWxlJyk7XHJcbiAgICAgIHMub25sb2FkID0gdGhpcy5vblNjcmlwdExvYWRlZDtcclxuICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uU2NyaXB0TG9hZGVkKCkge1xyXG4gICAgVGV4dFZpZXdlckNvbXBvbmVudC5fbG9hZGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIG9uQ2xpY2socGF5bG9hZCkge1xyXG4gICAgaWYgKCF0aGlzLmVtaXQpIHJldHVybjtcclxuICAgIHRoaXMuZW1pdCgnY2xpY2snLCBwYXlsb2FkKTtcclxuICB9XHJcbn1cclxuIl19