var TextViewerComponent_1;
import { __decorate, __metadata } from "tslib";
//---------------------------
// TEXT-VIEWER.ts
//---------------------------
import { Component, Input } from '@angular/core';
let TextViewerComponent = TextViewerComponent_1 = class TextViewerComponent {
    ngOnInit() {
        if (!TextViewerComponent_1._loaded) {
            const s = document.createElement('script');
            s.setAttribute('src', '/assets/pb-components/dist/pb-components-bundle.js');
            s.setAttribute('type', 'module');
            s.onload = this.onScriptLoaded;
            document.head.appendChild(s);
        }
    }
    onScriptLoaded() {
        TextViewerComponent_1._loaded = true;
    }
    onClick(payload) {
        if (!this.emit)
            return;
        this.emit('click', payload);
    }
};
TextViewerComponent._loaded = false;
__decorate([
    Input(),
    __metadata("design:type", Object)
], TextViewerComponent.prototype, "data", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TextViewerComponent.prototype, "emit", void 0);
TextViewerComponent = TextViewerComponent_1 = __decorate([
    Component({
        selector: 'n7-text-viewer',
        template: "<!-- NEW -->\r\n<div\r\n  class=\"n7-text-viewer {{data.classes || ''}}\"\r\n  *ngIf=\"data && data.endpoint\"\r\n>\r\n  <pb-page [attr.endpoint]=\"data.endpoint\" api-version=\"1.0.0\">\r\n    <pb-document\r\n      *ngFor=\"let doc of data.docs\"\r\n      [path]=\"doc.xml\"\r\n      [odd]=\"doc.odd\"\r\n      [id]=\"doc.id\"\r\n    >\r\n    </pb-document>\r\n\r\n    <app-drawer-layout force-narrow=\"force-narrow\" narrow=\"\">\r\n      <app-header-layout>\r\n        <app-header\r\n          fixed=\"fixed\"\r\n          data-template=\"browse:fix-links\"\r\n          style=\"\r\n            transition-duration: 0ms;\r\n            transform: translate3d(0px, 0px, 0px);\r\n            left: 0px;\r\n            right: 0.399994px;\r\n          \"\r\n        >\r\n          <!-- <pb-login id=\"loginElem\" auto=\"false\"></pb-login> -->\r\n          <app-toolbar\r\n            class=\"toolbar\"\r\n            sticky=\"sticky\"\r\n            style=\"transform: translate3d(0px, 0px, 0px)\"\r\n          >\r\n            <paper-icon-button\r\n              id=\"tocToggle\"\r\n              class=\"toc-toggle\"\r\n              icon=\"icons:view-list\"\r\n              role=\"button\"\r\n              tabindex=\"0\"\r\n              aria-disabled=\"false\"\r\n            ></paper-icon-button>\r\n\r\n            <pb-toggle-feature *ngIf=\"data.docs.length === 1\"\r\n              name=\"highlight1\"\r\n              selector=\"tei-app,pb-popover,pb-highlight\"\r\n              default=\"off\"\r\n              action=\"disable\"\r\n              emit=\"transcription\"\r\n              subscribe=\"transcription\"\r\n            >\r\n              <pb-i18n key=\"document.plain\">Plain Reading View</pb-i18n>\r\n            </pb-toggle-feature>\r\n\r\n            <pb-zoom\r\n              emit=\"transcription\"\r\n              direction=\"in\"\r\n              icon=\"icons:zoom-in\"\r\n            ></pb-zoom>\r\n            <pb-zoom\r\n              emit=\"transcription\"\r\n              direction=\"out\"\r\n              icon=\"icons:zoom-out\"\r\n            ></pb-zoom>\r\n            <!-- *ngIf=\"data.docs.length > 1\" -->\r\n            <pb-select-feature *ngIf=\"data.docs.length > 1\"\r\n              id=\"select-view1\"\r\n              name=\"view1\"\r\n              label=\"View\"\r\n              items='[\r\n                    {\"name\": \"View All Named Entities\", \"selectors\": [{\"selector\": \".person\", \"state\": false}, {\"selector\": \".place\", \"state\": false}]},\r\n      {\"name\": \"View People\", \"selectors\": [{\"selector\": \".person\", \"state\": false}, {\"selector\": \".place\", \"state\": true}]},\r\n      {\"name\": \"View Places\", \"selectors\": [{\"selector\": \".place\", \"state\": false}, {\"selector\": \".person\", \"state\": true}]}\r\n        ]'\r\n              subscribe=\"addChannel\"\r\n              emit=\"addChannel\"\r\n            ></pb-select-feature>\r\n           \r\n            <pb-download\r\n              *ngIf=\"data.docs && data.docs.length > 1\"\r\n              type=\"epub\"\r\n              [src]=\"data.docs[0].id\"\r\n              dialog=\"downloadDialog\"\r\n              title=\"Download ePub\"\r\n            >\r\n              <paper-button raised=\"\">Download ePub</paper-button>\r\n            </pb-download>\r\n            \r\n            <pb-search class=\"hidden\" id=\"search-form\" action=\"search\" submitOnLoad=\"true\">\r\n              <div class=\"buttons\">\r\n                  <paper-button slot=\"searchButton\"><pb-i18n key=\"search.search\"></pb-i18n></paper-button>\r\n                  <paper-button slot=\"resetButton\"><pb-i18n key=\"search.reset\"></pb-i18n></paper-button>\r\n              </div>\r\n            </pb-search>\r\n            \r\n            <ng-container *ngIf=\"!data.docs[0].translation\">\r\n            <pb-navigation\r\n              emit=\"transcription\"\r\n              keyboard=\"left\"\r\n              subscribe=\"transcription\"\r\n              direction=\"backward\"\r\n              unit=\"page\"\r\n            >\r\n              <paper-icon-button\r\n                icon=\"icons:chevron-left\"\r\n                role=\"button\"\r\n                tabindex=\"0\"\r\n                aria-disabled=\"false\"\r\n              ></paper-icon-button>\r\n            </pb-navigation>\r\n            <pb-navigation\r\n              emit=\"transcription\"\r\n              keyboard=\"right\"\r\n              subscribe=\"transcription\"\r\n              direction=\"forward\"\r\n              unit=\"page\"\r\n            >\r\n              <paper-icon-button\r\n                icon=\"icons:chevron-right\"\r\n                role=\"button\"\r\n                tabindex=\"0\"\r\n                aria-disabled=\"false\"\r\n              ></paper-icon-button>\r\n            </pb-navigation>\r\n          </ng-container>\r\n\r\n            <pb-progress\r\n              subscribe=\"transcription\"\r\n              indeterminate=\"\"\r\n              bottom-item=\"bottom-item\"\r\n              style=\"visibility: hidden\"\r\n            ></pb-progress>\r\n          </app-toolbar>\r\n        </app-header>\r\n        <pb-drawer\r\n          toggle=\"tocToggle\"\r\n          class=\"tocDrawer\"\r\n          emit=\"toc\"\r\n          subscribe=\"transcription\"\r\n        >\r\n          <div class=\"drawer-content\">\r\n            <h3>\r\n              <pb-i18n key=\"document.contents\">Contents</pb-i18n>\r\n            </h3>\r\n            <pb-load\r\n              *ngIf=\"data.docs\"\r\n              id=\"toc\"\r\n              url=\"api/document/{doc}/contents?target=transcription&amp;icons=true\"\r\n              [src]=\"data.docs[0].id\"\r\n              subscribe=\"toc\"\r\n              emit=\"toc\"\r\n              expand=\"expand\"\r\n              auto=\"auto\"\r\n              ><pb-i18n key=\"dialogs.loading\">Loading</pb-i18n></pb-load\r\n            >\r\n          </div>\r\n        </pb-drawer>\r\n        <main class=\"content-body\">\r\n          <pb-facsimile\r\n            *ngIf=\"data.facsimile\"\r\n            id=\"facsimile\"\r\n            [attr.base-uri]=\"data.facsimile.uri\"\r\n            subscribe=\"transcription\"\r\n            default-zoom-level=\"0\"\r\n            show-navigation-control=\"show-navigation-control\"\r\n            show-navigator=\"show-navigator\"\r\n          >\r\n          </pb-facsimile>\r\n          <ng-container *ngFor=\"let doc of data.docs; index as $i;\">\r\n            <!-- NO CHANNEL -->\r\n            <pb-view\r\n              *ngIf=\"!doc.channel || (doc.channel && doc.translation)\"\r\n              id=\"view{{ $i }}\"\r\n              [src]=\"doc.id\"\r\n              subscribe=\"transcription\"\r\n              emit=\"transcription\"\r\n              [attr.wait-for]=\"data.facsimile ? '#facsimile' : null\"\r\n              column-separator=\".tei-cb\"\r\n              append-footnotes=\"append-footnotes\"\r\n              view=\"{{ doc.view }}\"\r\n            ></pb-view>\r\n            <!-- WITH CHANNEL -->\r\n            <pb-view\r\n              *ngIf=\"doc.channel && doc.translation\"\r\n              id=\"view{{ $i }}\"\r\n              [src]=\"doc.id\"\r\n              xpath=\"//text[@type='translation']\"\r\n              emit=\"{{ doc.channel }}\"\r\n              subscribe=\"{{ doc.channel }}\"\r\n              view=\"{{ doc.view }}\"\r\n            >\r\n              <pb-param name=\"mode\" value=\"commentary\"></pb-param>\r\n            </pb-view>\r\n            <pb-view\r\n              *ngIf=\"doc.channel && !doc.translation\"\r\n              id=\"view{{ $i }}\"\r\n              [src]=\"doc.id\"\r\n              emit=\"addChannel\"\r\n              subscribe=\"addChannel\"\r\n              view=\"{{ doc.view }}\"\r\n            >\r\n              <pb-param name=\"mode\" value=\"commentary\"></pb-param>\r\n            </pb-view>\r\n          </ng-container>\r\n        </main>\r\n      </app-header-layout>\r\n    </app-drawer-layout>\r\n  </pb-page>\r\n</div>\r\n"
    })
], TextViewerComponent);
export { TextViewerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC12aWV3ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbjctZnJvbnRlbmQvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3RleHQtdmlld2VyL3RleHQtdmlld2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQiw2QkFBNkI7QUFDN0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFzQ3pELElBQWEsbUJBQW1CLDJCQUFoQyxNQUFhLG1CQUFtQjtJQU85QixRQUFRO1FBQ04sSUFBSSxDQUFDLHFCQUFtQixDQUFDLE9BQU8sRUFBRTtZQUNoQyxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzNDLENBQUMsQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLG9EQUFvRCxDQUFDLENBQUM7WUFDNUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDakMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1lBQy9CLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQztJQUVELGNBQWM7UUFDWixxQkFBbUIsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxPQUFPLENBQUMsT0FBTztRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSTtZQUFFLE9BQU87UUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDOUIsQ0FBQztDQUNGLENBQUE7QUFwQlEsMkJBQU8sR0FBRyxLQUFLLENBQUM7QUFKZDtJQUFSLEtBQUssRUFBRTs7aURBQXNCO0FBRXJCO0lBQVIsS0FBSyxFQUFFOztpREFBVztBQUhSLG1CQUFtQjtJQUovQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsZ0JBQWdCO1FBQzFCLDYzUEFBaUM7S0FDbEMsQ0FBQztHQUNXLG1CQUFtQixDQXlCL0I7U0F6QlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gVEVYVC1WSUVXRVIudHNcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vKipcclxuICogSW50ZXJmYWNlIGZvciBUZXh0Vmlld2VyQ29tcG9uZW50J3MgXCJkYXRhXCJcclxuICogQHByb3BlcnR5IGVuZHBvaW50IChyZXF1aXJlZClcclxuICogQHByb3BlcnR5IGRvYyAocmVxdWlyZWQpXHJcbiAqIEBwcm9wZXJ0eSBmYWNzaW1pbGUgKG9wdGlvbmFsKVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBUZXh0Vmlld2VyRGF0YSB7XHJcbiAgLypcclxuICAgICAqIFRFSVB1YiBzZXJ2ZXIgZW5kcG9pbnRcclxuICAqL1xyXG4gIGVuZHBvaW50OiBzdHJpbmc7XHJcbiAgLypcclxuICAgICAqIFhNTCBhbmQgT0REIHBhdGhzXHJcbiAgKi9cclxuICBkb2NzOiB7XHJcbiAgICB4bWw6IHN0cmluZztcclxuICAgIG9kZDogc3RyaW5nO1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIHZpZXc6IHN0cmluZztcclxuICAgIGNoYW5uZWw/OiBzdHJpbmc7XHJcbiAgICB0cmFuc2xhdGlvbj86IGJvb2xlYW47XHJcbiAgfVtdO1xyXG4gIC8qXHJcbiAgICAgKiBJSUlGIHNlcnZlciBlbmRwb2ludFxyXG4gICovXHJcbiAgZmFjc2ltaWxlPzogYW55O1xyXG4gIC8qKlxyXG4gICAqIGFkZGl0aW9uYWwgaHRtbCBjbGFzc2VzXHJcbiAgICovXHJcbiAgY2xhc3Nlcz86IHN0cmluZztcclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduNy10ZXh0LXZpZXdlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3RleHQtdmlld2VyLmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGV4dFZpZXdlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgZGF0YTogVGV4dFZpZXdlckRhdGE7XHJcblxyXG4gIEBJbnB1dCgpIGVtaXQ6IGFueTtcclxuXHJcbiAgc3RhdGljIF9sb2FkZWQgPSBmYWxzZTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZiAoIVRleHRWaWV3ZXJDb21wb25lbnQuX2xvYWRlZCkge1xyXG4gICAgICBjb25zdCBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcbiAgICAgIHMuc2V0QXR0cmlidXRlKCdzcmMnLCAnL2Fzc2V0cy9wYi1jb21wb25lbnRzL2Rpc3QvcGItY29tcG9uZW50cy1idW5kbGUuanMnKTtcclxuICAgICAgcy5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnbW9kdWxlJyk7XHJcbiAgICAgIHMub25sb2FkID0gdGhpcy5vblNjcmlwdExvYWRlZDtcclxuICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uU2NyaXB0TG9hZGVkKCkge1xyXG4gICAgVGV4dFZpZXdlckNvbXBvbmVudC5fbG9hZGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIG9uQ2xpY2socGF5bG9hZCkge1xyXG4gICAgaWYgKCF0aGlzLmVtaXQpIHJldHVybjtcclxuICAgIHRoaXMuZW1pdCgnY2xpY2snLCBwYXlsb2FkKTtcclxuICB9XHJcbn1cclxuIl19